package network.platon.contracts.wasm;

import com.platon.abi.wasm.WasmEventEncoder;
import com.platon.abi.wasm.WasmFunctionEncoder;
import com.platon.abi.wasm.datatypes.WasmEvent;
import com.platon.abi.wasm.datatypes.WasmEventParameter;
import com.platon.abi.wasm.datatypes.WasmFunction;
import com.platon.crypto.Credentials;
import com.platon.protocol.Web3j;
import com.platon.protocol.core.DefaultBlockParameter;
import com.platon.protocol.core.RemoteCall;
import com.platon.protocol.core.methods.request.PlatonFilter;
import com.platon.protocol.core.methods.response.Log;
import com.platon.protocol.core.methods.response.TransactionReceipt;
import com.platon.rlp.wasm.datatypes.Uint128;
import com.platon.rlp.wasm.datatypes.WasmAddress;
import com.platon.tx.TransactionManager;
import com.platon.tx.WasmContract;
import com.platon.tx.gas.GasProvider;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import rx.Observable;
import rx.functions.Func1;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://github.com/PlatONnetwork/client-sdk-java/releases">platon-web3j command line tools</a>,
 * or the com.platon.codegen.WasmFunctionWrapperGenerator in the 
 * <a href="https://github.com/PlatONnetwork/client-sdk-java/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with platon-web3j version 0.15.1.7.
 */
public class VIDToken extends WasmContract {
    private static String BINARY_0 = "";

    private static String BINARY_1 = "200141c8016a20012802a001220441016a20012802a4012004417f736a108101200041406b10b201200321040b20012802a0012203450d00200120033602a4010b200228020c22030440200220033602100b2004450440200020002d00303a00400b200041cc006a22024200370200200041e4006a22044200370200200041d8006a220342debbf3d6b6bead8a5b37030020002002360248200041e0006a22052004360200200141d0006a1015220220032903001077200228020c200241106a28020047044010000b0240200228020022072002280204220610062203450440410021040c010b41002104200141003602a801200142003703a001200141a0016a2003106c2007200620012802a001220820012802a40120086b1007417f470440200141c8016a20012802a001220441016a20012802a4012004417f736a108101200510b901200321040b20012802a0012203450d00200120033602a4010b200228020c22030440200220033602100b20044504402005200041c8006a10430b200041f4006a220742003702002000418c016a220d420037020020004180016a220242c3adc39cc39cd0fca97f3703002000200736027020004188016a2204200d360200200141f8006a1015220920022903001077200928020c200941106a28020047044010000b024020092802002203200928020422051006220e450440410021020c010b410021022001410036023020014200370328200141286a200e106c2003200520012802282206200128022c20066b1007417f47044002400240200141386a2001280228220241016a200128022c2002417f736a1081012202280204450d0020022802002d000041c001490d00200141b8016a200210ba0120014190016a200210bb01200141e0016a4104722106200141e8006a2103034020012802bc0120012802940146044020012802c001200128029801460d030b200141a0016a200141b8016a10bc01200141d0006a102c21022001420037036820012003360264200141a0016a10bd01410247044010000b200141106a102c2105200141c8016a200141a0016a410010a101200141c8016a2005108201200141d8006a220b200141186a290300370300200141e0006a220a200141206a28020036020020012001290310370350200142003702e401200120063602e001200141c8016a200141a0016a410110a101200141c8016a200141e0016a10b901200120012802e001360264200120012802e4012208360268200120012802e801220536026c02402005450440200120033602640c010b20082003360208200142003702e401200120063602e0010b2004200141c8016a2002108e0122052802004504404130104922022001290350370210200241286a22082001280268220f3602002002412c6a200128026c220c360200200241186a200b290300370200200241206a200a2903003702000240200c450440200220083602240c010b200f200836020820014200370368200120033602640b200420012802c8012005200210320b200141b8016a10be010c000b000b10000b200e21020b20012802282203450d002001200336022c0b200928020c22030440200920033602100b024020020d00200028027021020240200028029001450d0020002802880121032000200d360288012000410036029001200028028c0121052000410036028c012005410036020820032802042205200320051b2105034020052203450d012002200747044020032002290010370010200341206a200241206a280000360000200341186a200241186a290000370000200341246a200241246a1043024020032802082205450440410021050c010b2003200528020022064604402005410036020020052802042206450d012006109d0121050c010b200541003602042006450d002006109d0121050b2004200141d0006a200341106a109e012106200420012802502006200310322002109f0121020c010b0b0340200328020822030d000b200721020b034020022007460d0141301049220341106a2205200241106a10bf012004200141d0006a2005109e012105200420012802502005200310322002109f0121020c000b000b2000419c016a22024200370200200041b4016a22044200370200200041a8016a220342e7c7bf82d1e9bc96533703002000200236029801200041b0016a220220043602002003200210c001450440200220004198016a10c1010b200041c4016a22024200370200200041dc016a22044200370200200041d0016a220342a3b2d5acf19299801f370300200020023602c001200041d8016a220220043602002003200210c0014504402002200041c0016a10c1010b200041ec016a2202420037020020004184026a22044200370200200041f8016a220342c6cbe2ce97c196d923370300200020023602e80120004180026a220220043602002003200210c0014504402002200041e8016a10c1010b20004194026a22074200370200200041ac026a220c4200370200200041a0026a220242d2c2dab689b0e2c2f9003703002000200736029002200041a8026a2204200c360200200141386a1015220a20022903001077200a28020c200a41106a28020047044010000b0240200a2802002203200a280204220510062209450440410021020c010b410021022001410036023020014200370328200141286a2009106c2003200520012802282206200128022c20066b1007417f47044002400240200141106a2001280228220241016a200128022c2002417f736a1081012202280204450d0020022802002d000041c001490d00200141b8016a200210ba0120014190016a200210bb01200141e0006a220541086a2106200141e8006a210b034020012802bc0120012802940146044020012802c001200128029801460d030b200141f8006a200141b8016a10bc01200141d0006a102821022006420037030020054200370300200141f8006a10bd01410247044010000b200141e0016a10282103200141c8016a200141f8006a410010a101200141c8016a200310b1012002200310c201200141a0016a200141f8006a410110a101200141c8016a200141a0016a410010a1012001200141c8016a10a801200b200141086a290300370300200120012903003703602004200141c8016a2002105c220828020045044041301049220341186a20012802583602002003200129035037021020021065200341286a2006290300370300200341206a2005290300370300200420012802c8012008200310320b200141b8016a10be010c000b000b10000b200921020b20012802282203450d002001200336022c0b200a28020c22030440200a20033602100b024020020d002000280290022102024020002802b002450d0020002802a80221032000200c3602a802200041003602b00220002802ac022105200041003602ac022005410036020820032802042205200320051b2105034020052203450d0120022007470440200341106a200241106a10c3012106200341286a200241286a290300370300200341206a2002290320370300024020032802082205450440410021050c010b2003200528020022084604402005410036020020052802042208450d012008109d0121050c010b200541003602042008450d002008109d0121050b2004200141d0006a200610c4012106200420012802502006200310322002109f0121020c010b0b0340200328020822030d000b200721020b034020022007460d0141301049220341106a2205200241106a10c5012004200141d0006a200510c4012105200420012802502005200310322002109f0121020c000b000b200042003702b80241002102200041d8026a4100360200200041d0026a22034200370200200041c8026a220442cab9b2abdda68f924b370300200041c0026a4100360200200141c8016a1015220620042903001077200628020c200641106a28020047044010000b200041d4026a2105024020062802002204200628020422071006220b450d00200141003602c001200142003703b801200141b8016a200b106c2004200720012802b801220820012802bc0120086b1007417f47044002400240200141a0016a20012802b801220241016a20012802bc012002417f736a1081012202280204450d0020022802002d000041c001490d00200210a601210420002802d80220002802d00222076b410c6d20044904402003200141d0006a200420002802d40220076b410c6d200041d8026a10592204105a2004105b0b200141386a200210ba01200141106a200210bb01200041d8026a21080340200128023c200128021446044020012802402001280218460d030b200141d0006a200141386a10bc01200141d0006a200141e0016a1028220410b101024020002802d402220220002802d802490440200220012903e001370200200241086a200141e8016a2802003602002004106520052005280200410c6a3602000c010b200141f8006a2003200220032802006b410c6d220241016a10582002200810592102200128028001220720012903e001370200200741086a200141e8016a280200360200200410652001200128028001410c6a3602800120032002105a2002105b0b200141386a10be010c000b000b10000b200b21020b20012802b8012204450d00200120043602bc010b200628020c22040440200620043602100b024020020d0020002802bc02220720002802b80222046b410c6d220620002802d80220002802d00222026b410c6d4d04402006200528020020026b410c6d22084b0440200420042008410c6c6a2203200210c6011a20032007200510630c020b200320042007200210c601106a0c010b2002044020031069200041003602d802200042003702d0020b2003200320061058106220042007200510630b200042003703e002200041e8026a22044200370300200041f0026a22024286a2a280c5fcaef8f800370300200220004180036a10b801450440200020002903e0023703800320004188036a20042903003703000b20004190036a2202102c1a200041a8036a220342dc95efdbc683a7977f3703002003200041b0036a102c2204107445044020042002290300370300200441106a200241106a280200360200200441086a200241086a2903003703000b200141f0016a240020000b6001027f230041206b22022400200241086a1015220120002d000010c7011013200120002d0000101f200128020c200141106a28020047044010000b20012802002001280204100b200128020c22000440200120003602100b200241206a24000b8b14020b7f027e230041d0016b22022400200041a8036a200041b0036a1075200041f0026a20004180036a10c801200241306a10152204200041c8026a220129030010761013200420012903001077200428020c200441106a28020047044010000b2004280204210620042802002109200241b8016a10152107200241e8006a4100360200200241e0006a4200370300200241d8006a420037030020024200370350024020002802d002200041d4026a280200460440200241d0006a10c9011a0c010b200241d0006a41001016210320002802d402210520002802d00221010340200120054604402003410110161a052003200241186a200110521094011a2001410c6a21010c010b0b0b20022802502101200241d0006a41047210192007200241186a1078220810792007200120082802046a20082802006b1013200720002802d40220002802d0026b410c6d101a210320002802d402210520002802d00221010340200120054704402003200241d0006a200110521095012001410c6a21010c010b0b0240200328020c200341106a280200460440200341046a2101200328020021050c010b200341046a2101100020032802002105200328020c2003280210460d0010000b20092006200520012802001008200828020022010440200820013602040b200328020c22010440200320013602100b200428020c22010440200420013602100b200041d0026a1064200041b8026a1064200241b8016a10152206200041a0026a220129030010761013200620012903001077200628020c200641106a28020047044010000b2006280204210a2006280200210b200241186a10152108200241c8006a4100360200200241406b4200370300200241386a4200370300200242003703300240200041b0026a280200450440200241306a10c9011a0c010b200041ac026a2103200241306a41001016210520002802a8022101200241e8006a21040340200120034604402005410110161a05200241d0006a200141106a10c501200541001016200241a0016a200241d0006a10521094014100101620022903602004290300101841011016410110161a2001109f0121010c010b0b0b20022802302101200241306a41047210192008200241a0016a1078220910792008200120092802046a20092802006b1013200820002802b002101a2104200041ac026a2108200241d0006a410472210720002802a802210103402001200847044020044102101a2203200241306a200141106a105210950120034101101a210320024100360268200242003703602002420037035820024200370350200241d0006a2001290320200141286a220529030010181a200320022802501013200320012903202005290300101c1a200710192001109f0121010c010b0b0240200428020c200441106a280200460440200441046a2101200428020021030c010b200441046a2101100020042802002103200428020c2004280210460d0010000b200b200a200320012802001008200928020022010440200920013602040b200428020c22010440200420013602100b200628020c22010440200620013602100b200041f8016a20004180026a10ca01200041d0016a200041d8016a10ca01200041a8016a200041b0016a10ca01200241b8016a1015220620004180016a220129030010761013200620012903001077200628020c200641106a28020047044010000b2006280204210a2006280200210b200241186a10152109200241c8006a4100360200200241406b4200370300200241386a420037030020024200370330024020004190016a280200450440200241306a10c9011a0c010b2000418c016a2104200241306a410010162108200241e4006a210720002802880121010340200120044604402008410110161a05200241d0006a200141106a10bf01200841001016210520024180016a200241e0006a2802002203360200200241f8006a200241d8006a290300220c370300200241106a2003360200200241086a200c37030020022002290350220d37037020024190016a200c37030020024198016a2003360200200241a8016a200c370300200241b0016a20033602002002200d3703002002200d370388012002200d3703a001200520021017200710cb01410110161a2001109f0121010c010b0b0b20022802302101200241306a41047210192009200241a0016a1078220710792009200120072802046a20072802006b10132009200028029001101a21042000418c016a2108200028028801210103402001200847044020044102101a2105200241406b200141206a2800002203360200200241386a200141186a290000220c37030020022001290010220d370330200241f8006a200c37030020024180016a200336020020024190016a200c37030020024198016a20033602002002200d3703702002200d37038801200241e0006a2003360200200241d8006a200c3703002002200d3703502005200241d0006a4114101b200141246a10cc012001109f0121010c010b0b0240200428020c200441106a280200460440200441046a2101200428020021030c010b200441046a2101100020042802002103200428020c2004280210460d0010000b200b200a200320012802001008200728020022010440200720013602040b200428020c22010440200420013602100b200628020c22010440200620013602100b200241306a10152203200041d8006a220129030010761013200320012903001077200041e0006a2104200328020c200341106a28020047044010000b2003280204210820032802002107200241b8016a10152101200241e8006a4100360200200241e0006a4200370300200241d8006a420037030020024200370350200241d0006a200410cb011a20022802502106200241d0006a41047210192001200241d0006a1078220510792001200620052802046a20052802006b10132001200410cc010240200128020c200141106a280200460440200141046a2104200128020021060c010b200141046a2104100020012802002106200128020c2001280210460d0010000b20072008200620042802001008200528020022040440200520043602040b200128020c22050440200120053602100b200328020c22010440200320013602100b200241d0006a10152203200041386a220129030010761013200320012903001077200328020c200341106a28020047044010000b2003280204210420032802002108200241306a1015210120002d004010c70121072001200241b8016a1078220510792001200720052802046a20052802006b1013200120002d0040101f0240200128020c200141106a280200460440200141046a2107200128020021060c010b200141046a2107100020012802002106200128020c2001280210460d0010000b20082004200620072802001008200528020022040440200520043602040b200128020c22050440200120053602100b200328020c22010440200320013602100b200041106a200041206a10c801200241d0016a24000b3701017f230041206b22022400200010a601410247044010000b200241086a2000410110a101200241086a200110b101200241206a24000b6f01037f230041206b22022400200241086a101522012000290300200041086a220329030010cd011013200120002903002003290300101c220028020c200041106a28020047044010000b20002802002000280204100b200028020c22010440200020013602100b200241206a24000b1800200010281a200041186a4200370300200042003703100b7002017f017e230041306b22022400200010a601410347044010000b200241186a2000410110a101200241186a200110b101200241186a2000410210a101200241086a200241186a10a80120022903082103200141186a200241106a29030037030020012003370310200241306a24000b5702017f017e230041306b22022400200010a601410247044010000b200241186a2000410110a101200241086a200241186a10a801200229030821032001200241106a29030037030820012003370300200241306a24000ba40201057f230041206b22022400024002402000280204044020002802002d000041c001490d010b200241086a10281a0c010b200241186a2000108701200010880121030240024002400240200228021822000440200228021c220520034f0d010b41002100200241106a410036020020024200370308410021050c010b200241106a4100360200200242003703082000200520032003417f461b22046a21052004410a4b0d010b200220044101743a0008200241086a41017221030c010b200441106a4170712206104921032002200436020c20022006410172360208200220033602100b03402000200546450440200320002d00003a0000200341016a2103200041016a21000c010b0b200341003a00000b2001200241086a10c201200241206a24000b880101037f230041106b22022400200010860102400240200010a201450d002000280204450d0020002802002d000041c001490d010b10000b200241086a2000108701200228020c220041024f044010000b200228020821030340200004402000417f6a210020032d00002104200341016a21030c010b0b200120044100473a0000200241106a24000bdb0101047f23004190046b22022400200241d0036a10282104200241003a00dc03200241e0036a10282105200241dc036a2103200010a601410447044010000b200241013602f00320022000360280042002200241f0036a3602840420024180046a200410a7012002200020022802f00310a1012002200310b201200220022802f00341016a3602f00320024180046a200510a701200210a90121032002200220024180046a2004105220022d00dc03410047200241f0036a2005105220011107003a008f042002418f046a10aa01200310ab0120024190046a24000b4501017f230041206b22022400200241086a2000280200200028020428020010a101200241086a200110b20120002802042200200028020041016a360200200241206a24000b6502017f017e230041306b22022400200241186a2000280200200028020428020010a101200241086a200241186a10a801200229030821032001200241106a2903003703082001200337030020002802042200200028020041016a360200200241306a24000b880101037f41900c410136020041940c2802002100034020000440034041980c41980c2802002201417f6a2202360200200141014845044041900c4100360200200020024102746a22004184016a280200200041046a28020011020041900c410136020041940c28020021000c010b0b41980c412036020041940c200028020022003602000c010b0b0b820101047f230041106b2201240002402000280204450d0020002802002d000041c001490d00200141086a200010d501200128020c210003402000450d0120014100200128020822032003200010d30122046a20034520002004497222031b3602084100200020046b20031b2100200241016a21020c000b000b200141106a240020020bf50102057f017e230041d0006b22022400200241386a1015220320002903001077200328020c200341106a28020047044010000b0240200328020022052003280204220610062204450440410021000c010b410021002002410036023020024200370328200241286a2004106c2005200620022802282205200228022c20056b1007417f4704402002200241106a2002280228220041016a200228022c2000417f736a10810110a801200229030021072001200241086a29030037030820012007370300200421000b20022802282204450d002002200436022c0b200328020c22040440200320043602100b200241d0006a240020000b9e0301047f230041b0016b22022400024002402000280204450d0020002802002d000041c001490d00200241f0006a200010ba01200241e0006a200010bb01200241386a210003402002280274200228026446044020022802782002280268460d030b200241c8006a200241f0006a10bc01200241106a102c21032000420037030020024200370330200241c8006a10bd01410247044010000b20024198016a102c210420024180016a200241c8006a410010a10120024180016a2004108201200241206a2204200241a8016a28020036020020022002290398013703102002200241a0016a29030037031820024180016a200241c8006a410110a101200220024180016a10a8012000200241086a29030037030020022002290300370330200120024180016a2003108e01220528020045044041c0001049220341306a2002290330370300200341186a200229031837030020032002290310370310200341386a2000290300370300200341206a200428020036020020012002280280012005200310320b200241f0006a10be010c000b000b10000b200241b0016a24000b0b0020002001410110ce010b0b0020002001410010ce010b170020002001280204200141086a280200411c1085011a0b220002402000280204044020002802002d000041bf014b0d010b10000b200010b7010bb70102057f017e230041106b22032400200041046a210102402000280200220204402001280200220504402005200041086a2802006a21040b20002004360204200041086a2002360200200341086a200141002004200210d30110d40120002003290308220637020420004100200028020022012006422088a76b2202200220014b1b3602000c010b200020012802002201047f2001200041086a2802006a0541000b360204200041086a41003602000b200341106a24000b390020002001290200370200200041106a200141106a280200360200200041086a200141086a290200370200200041146a200141146a10361a0bbc0401067f230041c0016b22022400200241286a1015220420002903001077200428020c200441106a28020047044010000b0240200428020022032004280204220510062207450440410021000c010b410021002002410036022020024200370318200241186a2007106c2003200520022802182206200228021c20066b1007417f4704400240024020022002280218220041016a200228021c2000417f736a1081012200280204450d0020002802002d000041c001490d0020024180016a200010ba01200241f0006a200010bb01034020022802840120022802744604402002280288012002280278460d030b200241d8006a20024180016a10bc01200241406b102c2100200241003a0054200241d8006a10bd01410247044010000b200241a8016a102c210320024190016a200241d8006a410010a10120024190016a2003108201200241c8006a2203200241b0016a290300370300200241d0006a2205200241b8016a280200360200200220022903a80137034020024190016a200241d8006a410110a10120024190016a2002418f016a10b201200220022d008f013a0054200120024190016a200010312206280200450440412410492200200229034037000d200041216a20022d00543a00002000411d6a2005280200360000200041156a200329030037000020012002280290012006200010320b20024180016a10be010c000b000b10000b200721000b20022802182203450d002002200336021c0b200428020c22030440200420033602100b200241c0016a240020000ba30301057f230041106b22052400024020002001460d00200141046a21062001280200210102402000280208450d00200028020021022000200041046a3602002000410036020820002802042103200041003602042003410036020820022802042203200220031b2103034020032202450d01200120064704402002200129000d37000d2002411d6a2001411d6a280000360000200241156a200141156a290000370000200241216a200141216a2d00003a0000024020022802082203450440410021030c010b2002200328020022044604402003410036020020032802042204450d012004109d0121030c010b200341003602042004450d002004109d0121030b2000200541086a2002410d6a10cf012104200020052802082004200210322001109f0121010c010b0b0340200228020822020d000b200621010b034020012006460d01412410492202200129000d37000d2002411a6a2001411a6a290000370000200241156a200141156a29000037000020002005410c6a2002410d6a10cf0121032000200528020c2003200210322001109f0121010c000b000b200541106a24000b5b00024020002d0000410171450440200041003b01000c010b200028020841003a00002000410036020420002d0000410171450d00200041003602000b20002001290200370200200041086a200141086a280200360200200110650b940201047f20002001470440200128020420012d00002202410176200241017122041b2102200141016a210320012802082105410a21012005200320041b210420002d0000410171220304402000280200417e71417f6a21010b200220014d0440027f2003044020002802080c010b200041016a0b210120020440200120042002109c010b200120026a41003a000020002d000041017104402000200236020420000f0b200020024101743a000020000f0b416f2103200141e6ffffff074d0440410b20014101742201200220022001491b220141106a4170712001410b491b21030b20031049220120042002108f01200020023602042000200341017236020020002001360208200120026a41003a00000b20000b5d01017f0240200028020422030440034002402002200341106a108b01044020032802002200450d040c010b200328020422000d0020012003360200200341046a0f0b200021030c000b000b200041046a21030b2001200336020020030b23002000200110521a200041186a200141186a290300370300200020012903103703100b2800034020002001464504402002200010c3011a2002410c6a21022000410c6a21000c010b0b20020b5801027f230041206b22012400200141186a4100360200200141106a4200370300200141086a4200370300200142003703002001200041ff0171410047101e210020012802002102200041046a1019200141206a240020020b9a0201077f230041406a22042400200441286a10152203200029030010761013200320002903001077200328020c200341106a28020047044010000b2003280204210620032802002107200441106a101521022001290300200141086a220529030010cd012108200220041078220010792002200820002802046a20002802006b10130240200220012903002005290300101c220128020c200141106a280200460440200141046a2102200128020021050c010b200141046a2102100020012802002105200128020c2001280210460d0010000b20072006200520022802001008200028020022020440200020023602040b200128020c22000440200120003602100b200328020c22010440200320013602100b200441406b24000b3b01017f027f200041186a28020022010440200041086a280200200041146a2802002001107c0c010b20000b2201200128020041016a36020020000bdd06020c7f027e230041e0016b22022400200241306a10152205200029030010761013200520002903001077200528020c200541106a28020047044010000b2005280204210b2005280200210c200241186a10152107200241e0006a4100360200200241d8006a4200370300200241d0006a42003703002002420037034802402001280208450440200241c8006a10c9011a0c010b200141046a210d200241c8006a41001016210a2001280200210003402000200d460440200a410110161a05200241f8006a2000411d6a2800002204360200200241f0006a200041156a290000220e3703002002200029000d220f370368200041216a2d0000210820024190016a2203200436020020024188016a2209200e3703002002200f37038001200a410010162106200241a8016a20032802002204360200200241a0016a2009290300220e370300200241106a2004360200200241086a200e3703002002200229038001220f37039801200241b8016a200e370300200241c0016a2004360200200241d0016a200e370300200241d8016a20043602002002200f3703002002200f3703b0012002200f3703c8012006200210172008410047101e410110161a2000109f0121000c010b0b0b20022802482100200241c8006a41047210192007200241c8016a1078220610792007200020062802046a20062802006b101320072001280208101a2103200141046a2109200128020021000340200020094645044020034102101a210820024190016a2000411d6a280000220436020020024188016a200041156a290000220e3703002002200029000d220f37038001200241a0016a200e370300200241a8016a2004360200200241b8016a200e370300200241c0016a20043602002002200f370398012002200f3703b001200241d8006a2004360200200241d0006a200e3703002002200f3703482008200241c8006a4114101b200041216a2d0000101f2000109f0121000c010b0b0240200328020c200341106a280200460440200341046a2100200328020021040c010b200341046a2100100020032802002104200328020c2003280210460d0010000b200c200b200420002802001008200628020022000440200620003602040b200328020c22000440200320003602100b200528020c22000440200520003602100b200241e0016a24000bf50202047f067e230041b0016b22022400027f2001280208450440200010c9010c010b2000410010162103200141046a210420012802002101037f2001200446047f20034101101605200241386a200141286a2903002206370300200241306a200141206a29030022073703002002200129031022083703202002200141186a2903002209370328200141386a290300210a2001290330210b200241d8006a2006370300200241d0006a2200200737030020022009370348200220083703402003410010162105200241f8006a20002802002200360200200241f0006a20022903482206370300200241186a2000360200200241106a200637030020022002290340220737036820024188016a200637030020024190016a2000360200200241a0016a2006370300200241a8016a200036020020022007370308200220073703800120022007370398012005200241086a1017200b200a1018410110161a2001109f0121010c010b0b0b2101200241b0016a240020010bed0102047f027e230041e0006b2202240020002001280208101a2103200141046a210420012802002101034020012004460440200241e0006a24000520034102101a2105200241106a200141206a2800002200360200200241086a200141186a2900002206370300200220012900102207370300200241206a2006370300200241286a2000360200200241386a2006370300200241406b20003602002002200737031820022007370330200241d8006a2000360200200241d0006a2006370300200220073703482005200241c8006a4114101b2001290330200141386a290300101c1a2001109f0121010c010b0b0b5301037f230041206b22022400200241186a4100360200200241106a4200370300200241086a4200370300200242003703002002200020011018210320022802002104200341046a1019200241206a240020040be70101037f230041106b2204240020004200370200200041086a410036020020012802042103024002402002450440200321020c010b410021022003450d002003210220012802002d000041c001490d00200441086a200110d50120004100200428020c220120042802082202200110d30122032003417f461b20024520012003497222031b220536020820004100200220031b3602042000200120056b3602000c010b20012802002103200128020421012000410036020020004100200220016b20034520022001497222021b36020820004100200120036a20021b3602040b200441106a24000b5d01017f02402000280204220304400340024020022003410d6a108c01044020032802002200450d040c010b200328020422000d0020012003360200200341046a0f0b200021030c000b000b200041046a21030b2001200336020020030b3501017f230041106b220041b08c0436020c419c0c200028020c41076a417871220036020041a00c200036020041a40c3f003602000b3001017f200028020445044041000f0b4101210120002802002c0000417f4c047f200010d20120001088016a0520010b0b5b00027f027f41002000280204450d001a410020002802002c0000417f4a0d011a20002802002d0000220041bf014d04404100200041b801490d011a200041c97e6a0c010b4100200041f801490d001a200041897e6a0b41016a0b0b2901017f230041206b22022400200241086a20002001411410850110d1012100200241206a240020000b5b01027f2000027f0240200128020022054504400c010b200220036a200128020422014b0d0020012002490d00410020012003490d011a200220056a2104200120026b20032003417f461b0c010b41000b360204200020043602000b2401017f2001108801220220012802044b044010000b20002001200110d201200210d4010b2f002000200210d701200028020020002802046a20012002104c1a2000200028020420026a3602042000200310d8010b1b00200028020420016a220120002802084b044020002001107b0b0b850201047f02402001450d00034020002802102202200028020c460d01200241786a28020020014904401000200028021021020b200241786a2203200328020020016b220136020020010d012000200336021020004101200028020422032002417c6a28020022016b2202108001220441016a20024138491b220520036a10d901200120002802006a220320056a20032002109c010240200241374d0440200028020020016a200241406a3a00000c010b200441f7016a220341ff014d0440200028020020016a20033a00002000280200200120046a6a210103402002450d02200120023a0000200241087621022001417f6a21010c000b000b10000b410121010c000b000b0b0f0020002001107b200020013602040b26002000410110d701200028020020002802046a20013a00002000200028020441016a3602040b6101027f2001108001220241b7016a22034180024e044010000b2000200341ff017110da012000200028020420026a10d901200028020420002802006a417f6a2100034020010440200020013a0000200141087621012000417f6a21000c010b0b0b0b8d0402004180080b036c6174004190080bfc03ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fff0a1115141a1e0705ffffffffffffff1dff180d19090817ff12161f1b13ff010003100b1c0c0e060402ffffffffffff1dff180d19090817ff12161f1b13ff010003100b1c0c0e060402ffffffffff71707a7279397838676632747664773073336a6e35346b686365366d7561376c005472616e73666572457600417070726f76616c457600556e706175736545760050617573654576004c6f674576656e7445760056616c696461746557616c6c657445760056616c69646174655075626c697368657245760056616c696461746546696c65457600467265657a654576004275726e457600696e697400706175736500756e7061757365005472616e73666572005472616e7366657246726f6d0042616c616e63654f6600417070726f766500496e637265617365417070726f76616c004465637265617365417070726f76616c00416c6c6f77616e636500546f6b656e46616c6c6261636b005472616e73666572546f6b656e004275726e00467265657a650056616c69646174655075626c69736865720056616c696461746557616c6c65740056616c696461746546696c650056657269667946696c650053657450726963650053657457616c6c6574004c69737446696c6573";

    public static String BINARY = BINARY_0 + BINARY_1;

    public static final String FUNC_TRANSFERFROM = "TransferFrom";

    public static final String FUNC_BALANCEOF = "BalanceOf";

    public static final String FUNC_VALIDATEFILE = "ValidateFile";

    public static final String FUNC_VERIFYFILE = "VerifyFile";

    public static final String FUNC_ALLOWANCE = "Allowance";

    public static final String FUNC_TOKENFALLBACK = "TokenFallback";

    public static final String FUNC_PAUSE = "pause";

    public static final String FUNC_UNPAUSE = "unpause";

    public static final String FUNC_TRANSFER = "Transfer";

    public static final String FUNC_APPROVE = "Approve";

    public static final String FUNC_INCREASEAPPROVAL = "IncreaseApproval";

    public static final String FUNC_DECREASEAPPROVAL = "DecreaseApproval";

    public static final String FUNC_TRANSFERTOKEN = "TransferToken";

    public static final String FUNC_BURN = "Burn";

    public static final String FUNC_FREEZE = "Freeze";

    public static final String FUNC_VALIDATEPUBLISHER = "ValidatePublisher";

    public static final String FUNC_VALIDATEWALLET = "ValidateWallet";

    public static final String FUNC_SETPRICE = "SetPrice";

    public static final String FUNC_SETWALLET = "SetWallet";

    public static final String FUNC_LISTFILES = "ListFiles";

    public static final WasmEvent UNPAUSEEV_EVENT = new WasmEvent("UnpauseEv", Arrays.asList(), Arrays.asList());
    ;

    public static final WasmEvent APPROVALEV_EVENT = new WasmEvent("ApprovalEv", Arrays.asList(), Arrays.asList(new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent TRANSFEREV_EVENT = new WasmEvent("TransferEv", Arrays.asList(), Arrays.asList(new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent BURNEV_EVENT = new WasmEvent("BurnEv", Arrays.asList(), Arrays.asList(new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent FREEZEEV_EVENT = new WasmEvent("FreezeEv", Arrays.asList(), Arrays.asList(new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(Boolean.class)));
    ;

    public static final WasmEvent VALIDATEFILEEV_EVENT = new WasmEvent("ValidateFileEv", Arrays.asList(), Arrays.asList(new WasmEventParameter(Uint128.class) , new WasmEventParameter(String.class)));
    ;

    public static final WasmEvent LOGEVENTEV_EVENT = new WasmEvent("LogEventEv", Arrays.asList(), Arrays.asList(new WasmEventParameter(Uint128.class) , new WasmEventParameter(String.class)));
    ;

    public static final WasmEvent VALIDATEPUBLISHEREV_EVENT = new WasmEvent("ValidatePublisherEv", Arrays.asList(), Arrays.asList(new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(Boolean.class) , new WasmEventParameter(String.class)));
    ;

    public static final WasmEvent VALIDATEWALLETEV_EVENT = new WasmEvent("ValidateWalletEv", Arrays.asList(), Arrays.asList(new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(Boolean.class) , new WasmEventParameter(String.class)));
    ;

    public static final WasmEvent PAUSEEV_EVENT = new WasmEvent("PauseEv", Arrays.asList(), Arrays.asList());
    ;

    protected VIDToken(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    protected VIDToken(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> TransferFrom(String from_addr, String to_addr, Uint128 value) {
        final WasmFunction function = new WasmFunction(FUNC_TRANSFERFROM, Arrays.asList(from_addr,to_addr,value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> TransferFrom(String from_addr, String to_addr, Uint128 value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_TRANSFERFROM, Arrays.asList(from_addr,to_addr,value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public List<UnpauseEvEventResponse> getUnpauseEvEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(UNPAUSEEV_EVENT, transactionReceipt);
        ArrayList<UnpauseEvEventResponse> responses = new ArrayList<UnpauseEvEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            UnpauseEvEventResponse typedResponse = new UnpauseEvEventResponse();
            typedResponse.log = eventValues.getLog();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<UnpauseEvEventResponse> unpauseEvEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, UnpauseEvEventResponse>() {
            @Override
            public UnpauseEvEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(UNPAUSEEV_EVENT, log);
                UnpauseEvEventResponse typedResponse = new UnpauseEvEventResponse();
                typedResponse.log = log;
                return typedResponse;
            }
        });
    }

    public Observable<UnpauseEvEventResponse> unpauseEvEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(UNPAUSEEV_EVENT));
        return unpauseEvEventObservable(filter);
    }

    public List<ApprovalEvEventResponse> getApprovalEvEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(APPROVALEV_EVENT, transactionReceipt);
        ArrayList<ApprovalEvEventResponse> responses = new ArrayList<ApprovalEvEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            ApprovalEvEventResponse typedResponse = new ApprovalEvEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (WasmAddress) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (Uint128) eventValues.getNonIndexedValues().get(2);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ApprovalEvEventResponse> approvalEvEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, ApprovalEvEventResponse>() {
            @Override
            public ApprovalEvEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(APPROVALEV_EVENT, log);
                ApprovalEvEventResponse typedResponse = new ApprovalEvEventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (WasmAddress) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (Uint128) eventValues.getNonIndexedValues().get(2);
                return typedResponse;
            }
        });
    }

    public Observable<ApprovalEvEventResponse> approvalEvEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(APPROVALEV_EVENT));
        return approvalEvEventObservable(filter);
    }

    public RemoteCall<Uint128> BalanceOf(String owner_addr) {
        final WasmFunction function = new WasmFunction(FUNC_BALANCEOF, Arrays.asList(owner_addr), Uint128.class);
        return executeRemoteCall(function, Uint128.class);
    }

    public RemoteCall<TransactionReceipt> ValidateFile(String to_addr, Uint128 payment, String data, Boolean store, Boolean log) {
        final WasmFunction function = new WasmFunction(FUNC_VALIDATEFILE, Arrays.asList(to_addr,payment,data,store,log), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> ValidateFile(String to_addr, Uint128 payment, String data, Boolean store, Boolean log, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_VALIDATEFILE, Arrays.asList(to_addr,payment,data,store,log), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<Boolean> VerifyFile(String file_hash) {
        final WasmFunction function = new WasmFunction(FUNC_VERIFYFILE, Arrays.asList(file_hash), Boolean.class);
        return executeRemoteCall(function, Boolean.class);
    }

    public RemoteCall<Uint128> Allowance(String owner, String spender) {
        final WasmFunction function = new WasmFunction(FUNC_ALLOWANCE, Arrays.asList(owner,spender), Uint128.class);
        return executeRemoteCall(function, Uint128.class);
    }

    public List<TransferEvEventResponse> getTransferEvEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFEREV_EVENT, transactionReceipt);
        ArrayList<TransferEvEventResponse> responses = new ArrayList<TransferEvEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            TransferEvEventResponse typedResponse = new TransferEvEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (WasmAddress) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (Uint128) eventValues.getNonIndexedValues().get(2);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<TransferEvEventResponse> transferEvEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, TransferEvEventResponse>() {
            @Override
            public TransferEvEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFEREV_EVENT, log);
                TransferEvEventResponse typedResponse = new TransferEvEventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (WasmAddress) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (Uint128) eventValues.getNonIndexedValues().get(2);
                return typedResponse;
            }
        });
    }

    public Observable<TransferEvEventResponse> transferEvEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TRANSFEREV_EVENT));
        return transferEvEventObservable(filter);
    }

    public RemoteCall<TransactionReceipt> TokenFallback(String from_addr, Uint128 value, String data) {
        final WasmFunction function = new WasmFunction(FUNC_TOKENFALLBACK, Arrays.asList(from_addr,value,data), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> TokenFallback(String from_addr, Uint128 value, String data, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_TOKENFALLBACK, Arrays.asList(from_addr,value,data), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public List<BurnEvEventResponse> getBurnEvEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(BURNEV_EVENT, transactionReceipt);
        ArrayList<BurnEvEventResponse> responses = new ArrayList<BurnEvEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            BurnEvEventResponse typedResponse = new BurnEvEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (Uint128) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<BurnEvEventResponse> burnEvEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, BurnEvEventResponse>() {
            @Override
            public BurnEvEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(BURNEV_EVENT, log);
                BurnEvEventResponse typedResponse = new BurnEvEventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (Uint128) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Observable<BurnEvEventResponse> burnEvEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(BURNEV_EVENT));
        return burnEvEventObservable(filter);
    }

    public List<FreezeEvEventResponse> getFreezeEvEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(FREEZEEV_EVENT, transactionReceipt);
        ArrayList<FreezeEvEventResponse> responses = new ArrayList<FreezeEvEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            FreezeEvEventResponse typedResponse = new FreezeEvEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (Boolean) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<FreezeEvEventResponse> freezeEvEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, FreezeEvEventResponse>() {
            @Override
            public FreezeEvEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(FREEZEEV_EVENT, log);
                FreezeEvEventResponse typedResponse = new FreezeEvEventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (Boolean) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Observable<FreezeEvEventResponse> freezeEvEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(FREEZEEV_EVENT));
        return freezeEvEventObservable(filter);
    }

    public List<ValidateFileEvEventResponse> getValidateFileEvEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(VALIDATEFILEEV_EVENT, transactionReceipt);
        ArrayList<ValidateFileEvEventResponse> responses = new ArrayList<ValidateFileEvEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            ValidateFileEvEventResponse typedResponse = new ValidateFileEvEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (String) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ValidateFileEvEventResponse> validateFileEvEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, ValidateFileEvEventResponse>() {
            @Override
            public ValidateFileEvEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(VALIDATEFILEEV_EVENT, log);
                ValidateFileEvEventResponse typedResponse = new ValidateFileEvEventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (String) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Observable<ValidateFileEvEventResponse> validateFileEvEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(VALIDATEFILEEV_EVENT));
        return validateFileEvEventObservable(filter);
    }

    public List<LogEventEvEventResponse> getLogEventEvEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(LOGEVENTEV_EVENT, transactionReceipt);
        ArrayList<LogEventEvEventResponse> responses = new ArrayList<LogEventEvEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            LogEventEvEventResponse typedResponse = new LogEventEvEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (String) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<LogEventEvEventResponse> logEventEvEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, LogEventEvEventResponse>() {
            @Override
            public LogEventEvEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(LOGEVENTEV_EVENT, log);
                LogEventEvEventResponse typedResponse = new LogEventEvEventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (String) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Observable<LogEventEvEventResponse> logEventEvEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(LOGEVENTEV_EVENT));
        return logEventEvEventObservable(filter);
    }

    public List<ValidatePublisherEvEventResponse> getValidatePublisherEvEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(VALIDATEPUBLISHEREV_EVENT, transactionReceipt);
        ArrayList<ValidatePublisherEvEventResponse> responses = new ArrayList<ValidatePublisherEvEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            ValidatePublisherEvEventResponse typedResponse = new ValidatePublisherEvEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (Boolean) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (String) eventValues.getNonIndexedValues().get(2);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ValidatePublisherEvEventResponse> validatePublisherEvEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, ValidatePublisherEvEventResponse>() {
            @Override
            public ValidatePublisherEvEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(VALIDATEPUBLISHEREV_EVENT, log);
                ValidatePublisherEvEventResponse typedResponse = new ValidatePublisherEvEventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (Boolean) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (String) eventValues.getNonIndexedValues().get(2);
                return typedResponse;
            }
        });
    }

    public Observable<ValidatePublisherEvEventResponse> validatePublisherEvEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(VALIDATEPUBLISHEREV_EVENT));
        return validatePublisherEvEventObservable(filter);
    }

    public List<ValidateWalletEvEventResponse> getValidateWalletEvEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(VALIDATEWALLETEV_EVENT, transactionReceipt);
        ArrayList<ValidateWalletEvEventResponse> responses = new ArrayList<ValidateWalletEvEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            ValidateWalletEvEventResponse typedResponse = new ValidateWalletEvEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (Boolean) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (String) eventValues.getNonIndexedValues().get(2);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ValidateWalletEvEventResponse> validateWalletEvEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, ValidateWalletEvEventResponse>() {
            @Override
            public ValidateWalletEvEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(VALIDATEWALLETEV_EVENT, log);
                ValidateWalletEvEventResponse typedResponse = new ValidateWalletEvEventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (Boolean) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (String) eventValues.getNonIndexedValues().get(2);
                return typedResponse;
            }
        });
    }

    public Observable<ValidateWalletEvEventResponse> validateWalletEvEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(VALIDATEWALLETEV_EVENT));
        return validateWalletEvEventObservable(filter);
    }

    public List<PauseEvEventResponse> getPauseEvEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(PAUSEEV_EVENT, transactionReceipt);
        ArrayList<PauseEvEventResponse> responses = new ArrayList<PauseEvEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            PauseEvEventResponse typedResponse = new PauseEvEventResponse();
            typedResponse.log = eventValues.getLog();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<PauseEvEventResponse> pauseEvEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, PauseEvEventResponse>() {
            @Override
            public PauseEvEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(PAUSEEV_EVENT, log);
                PauseEvEventResponse typedResponse = new PauseEvEventResponse();
                typedResponse.log = log;
                return typedResponse;
            }
        });
    }

    public Observable<PauseEvEventResponse> pauseEvEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(PAUSEEV_EVENT));
        return pauseEvEventObservable(filter);
    }

    public RemoteCall<TransactionReceipt> pause() {
        final WasmFunction function = new WasmFunction(FUNC_PAUSE, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> pause(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PAUSE, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> unpause() {
        final WasmFunction function = new WasmFunction(FUNC_UNPAUSE, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> unpause(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_UNPAUSE, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public static RemoteCall<VIDToken> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(VIDToken.class, web3j, credentials, contractGasProvider, encodedConstructor);
    }

    public static RemoteCall<VIDToken> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(VIDToken.class, web3j, transactionManager, contractGasProvider, encodedConstructor);
    }

    public static RemoteCall<VIDToken> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, BigInteger initialVonValue) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(VIDToken.class, web3j, credentials, contractGasProvider, encodedConstructor, initialVonValue);
    }

    public static RemoteCall<VIDToken> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, BigInteger initialVonValue) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(VIDToken.class, web3j, transactionManager, contractGasProvider, encodedConstructor, initialVonValue);
    }

    public RemoteCall<TransactionReceipt> Transfer(String to_addr, Uint128 value) {
        final WasmFunction function = new WasmFunction(FUNC_TRANSFER, Arrays.asList(to_addr,value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> Transfer(String to_addr, Uint128 value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_TRANSFER, Arrays.asList(to_addr,value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> Approve(String spender_addr, Uint128 value) {
        final WasmFunction function = new WasmFunction(FUNC_APPROVE, Arrays.asList(spender_addr,value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> Approve(String spender_addr, Uint128 value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_APPROVE, Arrays.asList(spender_addr,value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> IncreaseApproval(String spender_addr, Uint128 added_value) {
        final WasmFunction function = new WasmFunction(FUNC_INCREASEAPPROVAL, Arrays.asList(spender_addr,added_value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> IncreaseApproval(String spender_addr, Uint128 added_value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_INCREASEAPPROVAL, Arrays.asList(spender_addr,added_value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> DecreaseApproval(String spender_addr, Uint128 subtracted_value) {
        final WasmFunction function = new WasmFunction(FUNC_DECREASEAPPROVAL, Arrays.asList(spender_addr,subtracted_value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> DecreaseApproval(String spender_addr, Uint128 subtracted_value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_DECREASEAPPROVAL, Arrays.asList(spender_addr,subtracted_value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> TransferToken(String token_addr_s, Uint128 tokens) {
        final WasmFunction function = new WasmFunction(FUNC_TRANSFERTOKEN, Arrays.asList(token_addr_s,tokens), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> TransferToken(String token_addr_s, Uint128 tokens, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_TRANSFERTOKEN, Arrays.asList(token_addr_s,tokens), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> Burn(Uint128 value) {
        final WasmFunction function = new WasmFunction(FUNC_BURN, Arrays.asList(value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> Burn(Uint128 value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_BURN, Arrays.asList(value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> Freeze(String addr_s, Boolean state) {
        final WasmFunction function = new WasmFunction(FUNC_FREEZE, Arrays.asList(addr_s,state), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> Freeze(String addr_s, Boolean state, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_FREEZE, Arrays.asList(addr_s,state), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> ValidatePublisher(String addr_s, Boolean state, String publisher) {
        final WasmFunction function = new WasmFunction(FUNC_VALIDATEPUBLISHER, Arrays.asList(addr_s,state,publisher), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> ValidatePublisher(String addr_s, Boolean state, String publisher, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_VALIDATEPUBLISHER, Arrays.asList(addr_s,state,publisher), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> ValidateWallet(String addr_s, Boolean state, String wallet) {
        final WasmFunction function = new WasmFunction(FUNC_VALIDATEWALLET, Arrays.asList(addr_s,state,wallet), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> ValidateWallet(String addr_s, Boolean state, String wallet, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_VALIDATEWALLET, Arrays.asList(addr_s,state,wallet), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> SetPrice(Uint128 new_price) {
        final WasmFunction function = new WasmFunction(FUNC_SETPRICE, Arrays.asList(new_price), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> SetPrice(Uint128 new_price, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_SETPRICE, Arrays.asList(new_price), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> SetWallet(String new_wallet_s) {
        final WasmFunction function = new WasmFunction(FUNC_SETWALLET, Arrays.asList(new_wallet_s), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> SetWallet(String new_wallet_s, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_SETWALLET, Arrays.asList(new_wallet_s), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> ListFiles(Uint128 start_at, Uint128 stop_at) {
        final WasmFunction function = new WasmFunction(FUNC_LISTFILES, Arrays.asList(start_at,stop_at), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> ListFiles(Uint128 start_at, Uint128 stop_at, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_LISTFILES, Arrays.asList(start_at,stop_at), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public static VIDToken load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        return new VIDToken(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static VIDToken load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        return new VIDToken(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static class UnpauseEvEventResponse {
        public Log log;
    }

    public static class ApprovalEvEventResponse {
        public Log log;

        public WasmAddress arg1;

        public WasmAddress arg2;

        public Uint128 arg3;
    }

    public static class TransferEvEventResponse {
        public Log log;

        public WasmAddress arg1;

        public WasmAddress arg2;

        public Uint128 arg3;
    }

    public static class BurnEvEventResponse {
        public Log log;

        public WasmAddress arg1;

        public Uint128 arg2;
    }

    public static class FreezeEvEventResponse {
        public Log log;

        public WasmAddress arg1;

        public Boolean arg2;
    }

    public static class ValidateFileEvEventResponse {
        public Log log;

        public Uint128 arg1;

        public String arg2;
    }

    public static class LogEventEvEventResponse {
        public Log log;

        public Uint128 arg1;

        public String arg2;
    }

    public static class ValidatePublisherEvEventResponse {
        public Log log;

        public WasmAddress arg1;

        public Boolean arg2;

        public String arg3;
    }

    public static class ValidateWalletEvEventResponse {
        public Log log;

        public WasmAddress arg1;

        public Boolean arg2;

        public String arg3;
    }

    public static class PauseEvEventResponse {
        public Log log;
    }
}
