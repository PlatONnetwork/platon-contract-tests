package network.platon.contracts.wasm;

import com.platon.abi.wasm.WasmEventEncoder;
import com.platon.abi.wasm.WasmFunctionEncoder;
import com.platon.abi.wasm.datatypes.WasmEvent;
import com.platon.abi.wasm.datatypes.WasmEventParameter;
import com.platon.abi.wasm.datatypes.WasmFunction;
import com.platon.crypto.Credentials;
import com.platon.protocol.Web3j;
import com.platon.protocol.core.DefaultBlockParameter;
import com.platon.protocol.core.RemoteCall;
import com.platon.protocol.core.methods.request.PlatonFilter;
import com.platon.protocol.core.methods.response.Log;
import com.platon.protocol.core.methods.response.TransactionReceipt;
import com.platon.rlp.wasm.datatypes.Uint128;
import com.platon.rlp.wasm.datatypes.Uint8;
import com.platon.rlp.wasm.datatypes.WasmAddress;
import com.platon.tx.TransactionManager;
import com.platon.tx.WasmContract;
import com.platon.tx.gas.GasProvider;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import rx.Observable;
import rx.functions.Func1;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://github.com/PlatONnetwork/client-sdk-java/releases">platon-web3j command line tools</a>,
 * or the com.platon.codegen.WasmFunctionWrapperGenerator in the 
 * <a href="https://github.com/PlatONnetwork/client-sdk-java/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with platon-web3j version 0.15.1.7.
 */
public class Bank extends WasmContract {
    private static String BINARY_0 = "0x0061736d01000000018e011660027f7f0060017f0060017f017f60027f7f017f60037f7f7f0060037f7f7f017f60047f7f7f7f0060000060047f7f7e7e0060057f7e7e7e7e0060057f7f7e7e7f0060047f7f7f7f017f60037f7e7e0060037f7e7e017f60027f7e00600a7f7e7e7e7e7f7e7e7e7e0060097f7e7e7e7e7e7e7e7e006000017f60017e017f60027e7e017f6000017e60017f017e02e5021003656e760c706c61746f6e5f70616e6963000703656e760d706c61746f6e5f63616c6c6572000103656e760e706c61746f6e5f61646472657373000103656e760f706c61746f6e5f7472616e73666572000503656e7610706c61746f6e5f74696d657374616d70001403656e760e706c61746f6e5f62616c616e6365000303656e7611706c61746f6e5f63616c6c5f76616c7565000203656e760b706c61746f6e5f73686133000603656e760d706c61746f6e5f726576657274000703656e7617706c61746f6e5f6765745f696e7075745f6c656e677468001103656e7610706c61746f6e5f6765745f696e707574000103656e7617706c61746f6e5f6765745f73746174655f6c656e677468000303656e7610706c61746f6e5f6765745f7374617465000b03656e7610706c61746f6e5f7365745f7374617465000603656e760c706c61746f6e5f6576656e74000603656e760d706c61746f6e5f72657475726e0000039f019d01070f0302000005000002030d0301030d0510090c0601000000010909000a0101030100010a010403010c010008000800000404000808080506030201010200040204010203000002020500020000050b0105000402050300010402040001070504010200150000020100020000000201000001020000070b020303000303030000000000000213120e02000205030205070402020600060000000000090405017001141405030100020608017f0141f08c040b073a04066d656d6f72790200115f5f7761736d5f63616c6c5f63746f727300100f5f5f66756e63735f6f6e5f6578697400860106696e766f6b65006e0919010041010b13252e3335383a3f403b4241433d44462d34453c0adca2029d01050010a0010b8706020f7f027e230041a0026b220a2400200a41206a41a60a1012210c200a4188016a1013210b200a41f8006a200c1014200a41e8006a20001015200a41e0006a4100360200200a41d8006a4200370300200a41d0006a4200370300200a4200370348200a41c8006a200a280278200a28027c1016200a280268200a28026c1016210e200b200a2802481017200b200a41f8006a1018200b200a41e8006a1018200b28020c200b41106a28020047044010000b200b280204210f200b2802002110200a41306a10192100200a41b0016a220c200541106a280000360200200a200541086a2900003703a801200a20052900003703a001200a41d0016a4100360200200a41c8016a22114200370300200a41c0016a22124200370300200a42003703b801200a41b8016a4100101a20012002101b20032004101b210d200a41e8016a2213200c2802002205360200200a41e0016a2214200a2903a8012219370300200a41186a2005360200200a41106a2019370300200a200a2903a001221a3703d801200a41f8016a22152019370300200a4180026a22162005360200200a4190026a22172019370300200a4198026a22182005360200200a201a370308200a201a3703f001200a201a37038802200d200a41086a101c20062007101b20082009101b4101101a2105200a2802b801210d200541046a101d2000200d101720004105101e20012002101f20032004101f21002018200c28020022053602002017200a2903a8012219370300200a200a2903a001221a3703880220142019370300201320053602002015201937030020162005360200200a201a3703d801200a201a3703f0012011200536020020122019370300200a201a3703b8012000200a41b8016a4114102020062007101f20082009101f220528020c200541106a28020047044010000b2010200f20052802002005280204100e200528020c22000440200520003602100b200e41046a101d200a28026822050440200a200536026c0b200a28027822050440200a200536027c0b200b28020c22050440200b20053602100b200a41a0026a24000b1f0020004200370200200041086a41003602002000200120011050105120000b1d0020001052200041146a41003602002000420037020c20004102101e0b8b0101037f230041306b22032400200341186a101922022001105310172002200341086a200110541055200228020c200241106a28020047044010000b200041003602082000420037020020022802042101200228020021042000412010562004200120002802002201200028020420016b1007200228020c22000440200220003602100b200341306a24000b940202037f027e23004180016b22022400200241206a10192204200110571017200241186a200141106a2800002203360200200241106a200141086a2900002205370300200220012900002206370308200241406b2005370300200241c8006a2003360200200241d8006a2005370300200241e0006a20033602002002200637033820022006370350200241f8006a2003360200200241f0006a2005370300200220063703682004200241e8006a41141020220128020c200141106a28020047044010000b200041003602082000420037020020012802042103200128020021042000412010562004200320002802002203200028020420036b1007200128020c22000440200120003602100b20024180016a24000b8b0101017f024020012002460440410121030c010b4101210302400240200220016b2202410146044020012c0000417f4c0d010c030b200241374b0d010b200241016a21030c010b2002105820026a41016a21030b027f200041186a28020022010440200041086a280200200041146a280200200110590c010b20000b2201200128020020036a36020020000b13002000280208200149044020002001105a0b0b1600200020012802002200200128020420006b10201a0b190020001052200041146a41003602002000420037020c20000bc30c02077f027e230041306b22042400200041046a2107027f20014101460440200041086a280200200041146a280200200041186a220228020022031059280200210120022003417f6a3602002007105b4180104f044020072000410c6a280200417c6a105c0b200141384f047f2001105820016a0520010b41016a2102200041186a28020022010440200041086a280200200041146a280200200110590c020b20000c010b02402007105b0d00200041146a28020022014180084f0440200020014180786a360214200041086a2201280200220228020021032001200241046a360200200420033602182007200441186a105d0c010b2000410c6a2802002202200041086a2802006b4102752203200041106a2205280200220620002802046b2201410275490440418020104a2105200220064704400240200028020c220120002802102202470d0020002802082203200028020422064b04402000200320012003200320066b41027541016a417e6d41027422026a105e220136020c2000200028020820026a3602080c010b200441186a200220066b2201410175410120011b22012001410276200041106a105f2102200028020c210320002802082101034020012003470440200228020820012802003602002002200228020841046a360208200141046a21010c010b0b200029020421092000200229020037020420022009370200200029020c21092000200229020837020c2002200937020820021060200028020c21010b200120053602002000200028020c41046a36020c0c020b02402000280208220120002802042202470d00200028020c2203200028021022064904402000200120032003200620036b41027541016a41026d41027422026a106122013602082000200028020c20026a36020c0c010b200441186a200620026b2201410175410120011b2201200141036a410276200041106a105f2102200028020c210320002802082101034020012003470440200228020820012802003602002002200228020841046a360208200141046a21010c010b0b200029020421092000200229020037020420022009370200200029020c21092000200229020837020c2002200937020820021060200028020821010b2001417c6a2005360200200020002802082201417c6a22023602082002280200210220002001360208200420023602182007200441186a105d0c010b20042001410175410120011b20032005105f2102418020104a2106024020022802082201200228020c2203470d0020022802042205200228020022084b04402002200520012005200520086b41027541016a417e6d41027422036a105e22013602082002200228020420036a3602040c010b200441186a200320086b2201410175410120011b22012001410276200241106a280200105f21032002280208210520022802042101034020012005470440200328020820012802003602002003200328020841046a360208200141046a21010c010b0b20022902002109200220032902003702002003200937020020022902082109200220032902083702082003200937020820031060200228020821010b200120063602002002200228020841046a360208200028020c2105034020002802082005460440200028020421012000200228020036020420022001360200200228020421012002200536020420002001360208200029020c21092000200229020837020c2002200937020820021060052005417c6a210502402002280204220120022802002203470d0020022802082206200228020c22084904402002200120062006200820066b41027541016a41026d41027422036a106122013602042002200228020820036a3602080c010b200441186a200820036b2201410175410120011b2201200141036a4102762002280210105f21062002280208210320022802042101034020012003470440200428022020012802003602002004200428022041046a360220200141046a21010c010b0b20022902002109200220042903183702002002290208210a20022004290320370208200420093703182004200a37032020061060200228020421010b2001417c6a200528020036020020022002280204417c6a3602040c010b0b0b200441186a20071062200428021c410036020041012102200041186a0b2201200128020020026a360200200441306a240020000b900101027f4101210420014280015441002002501b450440034020012002845045044020024238862001420888842101200341016a2103200242088821020c010b0b200341384f047f2003105820036a0520030b41016a21040b027f200041186a28020022030440200041086a280200200041146a280200200310590c010b20000b2203200328020020046a36020020000b6601037f410121030240034020024114460d01200120026a2104200241016a210220042d0000450d000b411521030b027f200041186a28020022020440200041086a280200200041146a280200200210590c010b20000b2202200228020020036a36020020000bea0101047f230041106b22042400200028020422012000280210220241087641fcffff07716a2103027f410020012000280208460d001a2003280200200241ff07714102746a0b2101200441086a20001062200428020c210203400240200120024604402000410036021420002802082103200028020421010340200320016b41027522024103490d022000200141046a22013602040c000b000b200141046a220120032802006b418020470d0120032802042101200341046a21030c010b0b2002417f6a220241014d04402000418004418008200241016b1b3602100b20002001105c200441106a24000b8e0201057f2001044020002802042105200041106a2802002202200041146a280200220349044020022001ad2005ad422086843702002000200028021041086a36021020000f0b027f41002002200028020c22046b410375220641016a2202200320046b2203410275220420042002491b41ffffffff01200341037541ffffffff00491b2204450d001a2004410374104a0b2102200220064103746a22032001ad2005ad4220868437020020032000280210200028020c22066b22016b2105200220044103746a2102200341086a2103200141014e044020052006200110651a0b20002002360214200020033602102000200536020c20000f0b200041c00110aa01200041004100410110a60120000bd10202037f027e02402001200284500440200041800110aa010c010b20014280015441002002501b4504402001210720022106034020062007845045044020064238862007420888842107200341016a2103200642088821060c010b0b0240200341384f04402003210503402005044020054108762105200441016a21040c010b0b200441c9004f044010000b2000200441b77f6a41ff017110aa012000200028020420046a10a901200028020420002802006a417f6a21042003210503402005450d02200420053a0000200541087621052004417f6a21040c000b000b200020034180017341ff017110aa010b2000200028020420036a10a901200028020420002802006a417f6a210303402001200284500d02200320013c0000200242388620014208888421012003417f6a2103200242088821020c000b000b20002001a741ff017110aa010b2000410110a80120000b7001017f4101210302400240024002402002410146044020012c000022024100480d012000200241ff017110aa010c040b200241374b0d01200221030b200020034180017341ff017110aa010c010b2000200210ab01200221030b200020012003410010a6010b2000410110a80120000bba0301077f230041a0016b220924002009419a0a1012210b200941e8006a1013210a200941d8006a200b1014200941c8006a20001015200941406b4100360200200941386a4200370300200941306a420037030020094200370328200941286a2009280258200928025c10162009280248200928024c1016210b200a20092802281017200a200941d8006a1018200a200941c8006a1018200a28020c200a41106a28020047044010000b200a280204210c200a280200210d200941106a1019210020094198016a410036020020094190016a420037030020094188016a4200370300200942003703800120094180016a4100101a20012002101b20032004101b20052006101b20072008101b4101101a210e200928028001210f200e41046a101d2000200f101720004104101e20012002101f20032004101f20052006101f20072008101f220028020c200041106a28020047044010000b200d200c20002802002000280204100e200028020c220c04402000200c3602100b200b41046a101d2009280248220004402009200036024c0b2009280258220004402009200036025c0b200a28020c22000440200a20003602100b200941a0016a24000ba20301077f230041a0016b220524002005418b0a10122107200541e8006a10132106200541d8006a20071014200541c8006a20001015200541406b4100360200200541386a4200370300200541306a420037030020054200370328200541286a2005280258200528025c10162005280248200528024c101621072006200528022810172006200541d8006a10182006200541c8006a1018200628020c200641106a28020047044010000b2006280204210820062802002109200541106a1019210020054198016a410036020020054190016a420037030020054188016a4200370300200542003703800120054180016a4100101a20012002101b20032004101b4101101a210a200528028001210b200a41046a101d2000200b101720004102101e20012002101f20032004101f220028020c200041106a28020047044010000b2009200820002802002000280204100e200028020c22080440200020083602100b200741046a101d2005280248220004402005200036024c0b2005280258220004402005200036025c0b200628020c22000440200620003602100b200541a0016a24000b960301077f230041a0016b22032400200341800a10122105200341e8006a10132104200341d8006a20051014200341c8006a20001015200341406b4100360200200341386a4200370300200341306a420037030020034200370328200341286a2003280258200328025c10162003280248200328024c101621052004200328022810172004200341d8006a10182004200341c8006a1018200428020c200441106a28020047044010000b2004280204210620042802002107200341106a1019210020034198016a410036020020034190016a420037030020034188016a4200370300200342003703800120034180016a4100101a20012002101b4101101a21082003280280012109200841046a101d20002009101720004101101e20012002101f220028020c200041106a28020047044010000b2007200620002802002000280204100e200028020c22060440200020063602100b200541046a101d2003280248220004402003200036024c0b2003280258220004402003200036025c0b200428020c22000440200420003602100b200341a0016a24000be605020d7f047e230041a0026b22042400200441f8006a10132105200441e8006a20001014200441d8006a20011015200441d0006a4100360200200441c8006a4200370300200441406b420037030020044200370338200441386a2004280268200428026c10162004280258200428025c101621072005200428023810172005200441e8006a10182005200441d8006a1018200528020c200541106a28020047044010000b2005280204210820052802002109200441206a10192101200441a0016a2200200241106a2800003602002004200241086a290000370398012004200229000037039001200341086a290300211320032903002114200441d0016a4100360200200441c8016a22034200370300200441c0016a220a4200370300200442003703b801200441b8016a4100101a2106200441e8016a220b20002802002202360200200441e0016a220c2004290398012211370300200441186a2002360200200441106a2011370300200420042903900122123703d801200441f8016a220d201137030020044180026a220e200236020020044190026a220f201137030020044198026a2210200236020020042012370308200420123703f00120042012370388022006200441086a101c20142013101b4101101a210220042802b8012106200241046a101d20012006101720014102101e2101201020002802002202360200200f20042903980122113703002004200429039001221237038802200c2011370300200b2002360200200d2011370300200e2002360200200420123703d801200420123703f00120032002360200200a2011370300200420123703b8012001200441b8016a4114102020142013101f220228020c200241106a28020047044010000b2009200820022802002002280204100e200228020c22030440200220033602100b200741046a101d2004280258220204402004200236025c0b2004280268220204402004200236026c0b200528020c22020440200520023602100b200441a0026a24000bd30201017f230041306b22012400200041d0006a4189081026200041f8006a4195081026200041b8046a4202370300200041b0046a428080a08cebe2ebf1b57f37030020004188046a420037030020004180046a428080a0a89c94b6e679370300200041d8036a4200370300200041d0036a4280c8afa025370300200041a8036a4200370300200041a0036a4280d0dbc3f402370300200041f8026a4200370300200041f0026a4200370300200041c0026a41193a0000200041a8026a41013a000020004190026a41193a0000200041f8016a41083a0000200041e0016a41143a0000200041c8016a41013a0000200041b0016a410f3a000020004198016a41123a0000200141186a419908102720012d002c0440200041c0066a2001290318370000200041d0066a200141286a280200360000200041c8066a200141206a2903003700000b200141c4081027200141306a24000b0d00200020012001105010a1010bf613010e7f23004180016b22022400200241186a41ef081012210e200241086a200110122209280208200941016a220c20022d0008220141017122031b21062009280204200141017620031b21084100210141012104024003402004410171410020012008491b0440200120066a2d00002203415f6a41ff017141de004921042005200341bf7f6a41ff0171411a4972210520072003419f7f6a41ff0171411a49722107200141016a21010c01050240200420052007714101737121052008450d002008210103402001450d01200120066a21042001417f6a220321012004417f6a2d00004131470d000b0c030b0b0b417f21030b024002402005410171450d00200341076a20084b0d00200341016a4102490d00200841da004b0d00410021012002410036025020024200370348200241c8006a20082003417f7322076a10564101210502400240024003402001200928020420022d00082204410176200441017122041b20076a4f044002402005410171450d05200241386a106a220141016a210d410021040340200320044604402001280204220720022d003822034101762206200341017122051b2204200e28020420022d00182203410176200341017122031b470d05200e280208200e41016a20031b210320050d0220062104200d210503402004450440200621070c080b20052d000020032d0000470d06200341016a2103200541016a21052004417f6a21040c000b00052009280208200c20022d00084101711b20046a2c000022064120722006200641bf7f6a411a491b210b024002400240027f20022d00382208410171220f450440410a210720084101760c010b20012802002208417e71417f6a210720012802040b220520074604402001280208200d20084101711b210a416f2108200741e6ffffff074d0440410b20074101742206200741016a220820082006491b220641106a4170712006410b491b21080b2008104a2206200a2007106b20012008410172360200200120063602080c010b200f450d01200128020821060b2001200541016a3602040c010b2002200541017441026a3a0038200d21060b200520066a220541003a00012005200b3a0000200441016a21040c010b000b000b05200228024820016a2009280208200c20041b20036a20016a41016a2d00004180096a2d000022043a00002005200441ff0147712105200141016a21010c010b0b2004450d012001280208210503402004450d0220052d000020032d0000470d01200341016a2103200541016a21052004417f6a21040c000b000b200241e8006a104d1a200041003a0014200041106a200241f8006a280200360000200041086a200241f0006a2903003700002000200229036837000020022802482201450d032002200136024c0c030b410021032002410036026020024200370358200241d8006a2007410174410172105603402003200128020420022d00382204410176200441017122041b22054f450440200228025820036a2001280208200d20041b20036a2d000022044105763a00002002280258200128020420022d0038220541017620054101711b6a20036a41016a2004411f713a0000200341016a21030c010b0b200228025820056a41003a0000200228025c21040240200228024c2203200228024822016b22054101480d0020052002280260220620046b4c0440034020012003460d02200420012d00003a00002002200228025c41016a220436025c200141016a21010c000b000b200241f8006a200241e0006a36020041002107200241003602742004200228025822086b2109200420056a20086b2205200620086b2206410174220820082005491b41ffffffff07200641ffffffff03491b220604402006104a21070b200220073602682002200720096a22053602702002200620076a3602742002200536026c200241e8006a410472210703402001200346450440200520012d00003a00002002200228027041016a2205360270200141016a21010c010b0b20022802582004200710690240200228025c220320046b220141004c0440200228027021040c010b2002200228027020042001106520016a2204360270200228025c21030b200228025821012002200228026c3602582002200136026c2002200436025c2002200336027020022802602103200220022802743602602002200336027420022001360268200241e8006a1068200228025c21040b2002420037025c2002280258210320024100360258200420036b21044101210103402004044020032d000041002001411d764101716b41b3c5d1d0027141002001411c764101716b41dde788ea037141002001411b764101716b41fab384f5017141002001411a764101716b41ed9cc2b20271410020014119764101716b41b2afa9db0371200141057441e0ffffff037173737373737321012004417f6a2104200341016a21030c010b0b20014101470d004100210a20024100360260200242003703582002410036023020024200370328027f4100200228024c417a6a2204200228024822016b2203450d001a200241286a2003106c03402001200446450440200228022c220320012d00003a00002002200341016a36022c200141016a21010c010b0b2002280228210a200228022c0b200a6b210f200241e0006a210c41002101410021064100210b02400340200b200f46044002402006410820016b7441ff0171452001410548712101200a04402002200a36022c0b20010d00200228025821010c030b05200a200b6a2d0000200641057441e01f71722106200141056a21010340200141084e04402006200141786a2201762104200228025c220520022802602207490440200520043a00002002200228025c41016a36025c0c02052002200c36027841002103200241003602742005200228025822086b220541016a2209200720086b2207410174220820082009491b41ffffffff07200741ffffffff03491b220704402007104a21030b20022003360268200320056a220520043a00002002200320076a3602742002200536026c2002200541016a360270200241d8006a200241e8006a1067200241e8006a10680c020b000b0b200b41016a210b0c010b0b200228025c200228025822016b4114470d0041002101200241003a0028200241e8006a200241286a104e200228025c200228025822036b21040340024020012004460d00200141134b0d00200241e8006a20016a200120036a2d00003a0000200141016a21010c010b0b20002002290368370000200041013a0014200041106a200241f8006a280200360000200041086a200241f0006a290300370000200304402002200336025c0b20022802482201450d032002200136024c0c030b2001450d002002200136025c0b20022802482201450d002002200136024c0b200241e8006a104d1a200041003a0014200041106a200241f8006a280200360000200041086a200241f0006a290300370000200020022903683700000b20024180016a24000bec0202027f047e230041b0016b22022400200241f8006a1029200241406b2002290378220620024180016a290300220742e4004200102a200241306a20022903402204200241c8006a290300220520004190026a3100004200102b200241206a2002290330200241386a290300420a4200102a2002200241286a2903003703a801200220022903203703a001200041c0066a200241a0016a102c200241106a20042005200041c0026a3100004200102b20022002290310200241186a290300420a4200102a200041f0026a22032002290300220420032903007c2205370300200041f8026a22032005200454ad200241086a29030020032903007c7c37030020024190016a200141086a290000220537030020024198016a200141106a280000220336020020012900002104200241d8006a2005370300200241e0006a2003360200200220043703880120022004370350200241e8006a200020062007200241d0006a102d200241b0016a24000b4102017f017e230041206b220124002001200141106a200141106a1006104f200129030021022000200141086a29030037030820002002370300200141206a24000b3c01017f230041106b220524002005200120022003200410ac01200529030021012000200541086a29030037030820002001370300200541106a24000b7501017e2000200120047e200220037e7c20034220882204200142208822027e7c200342ffffffff0f832203200142ffffffff0f8322017e2205422088200220037e7c22034220887c200120047e200342ffffffff0f837c22034220887c3703082000200542ffffffff0f832003422086843703000ba60102027f027e230041106b22022400200241003602082002420037030020024120105620022802042002280200417f736a2103200141086a29030021042001290300210503402003417f46450440200228020020036a20053c0000200442388620054208888421052003417f6a2103200442088821040c010b0b200020022802002203200228020420036b10031a200228020022030440200220033602040b200241106a24000b860a02057f0b7e230041d0026b22052400200541b8026a102f200541c8016a200141b0016a310000420020022003102b200541b8016a20052903c801200541d0016a29030042e4004200102a200541a8016a20052903b801220c200541c0016a290300220e200141f8016a3100004200102b200541e8016a2002200342054200102b20054198016a20052903a801200541b0016a29030042e4004200102a200541d8016a20052903e801200541f0016a29030042e4004200102a200541f8016a20012002200c7d2003200e7d2002200c54ad7d104520054188016a200c200529039801220a7d220b20052903d80122107d220f200e200541a0016a29030022137d200c200a54ad7d200541e0016a2903007d200b201054ad7d220d20014180046a29030020014188046a290300102b20054190016a2903002110200529038801210b024020052903f801220c20054180026a290300220e8450450440200141e0056a2903002211200c20117c221454200141e8056a29030022122014201154ad200e20127c7c22115420112012511b0d010b10080b024002402004200141f8066a1030450d002004200541b8026a1030450d00200141d8046a200410372206290300200141b0046a29030054200641086a2903002211200141b8046a29030022125420112012511b0d0020014180056a220620041037220741086a2903002112200729030021112006200410372206200a20117c220a3703002006200a201154ad201220137c7c370308200f210a0c010b200541f8006a20012903800420014188046a290300200a200f7c220a200a200f54ad200d20137c7c220d102b20054180016a29030021102005290378210b0b0240200141e0056a290300220f200141e8056a220629030022138450450440200541e8006a20012903800420014188046a290300200a200d102b200541d8006a2005290368200541f0006a290300200c200f7c220b200b200f54ad200e20137c7c2210102a200541c8006a2005290358220d200541e0006a290300220a200c200e102b2001200b3703e0052006201037030020014190066a2206200d2006290300220b7c221037030020014198066a22062010200b54ad200a20062903007c7c370300200541d0006a29030021102005290348210b0c010b2001200c3703e0052006200e3703000b200141d8046a2206200541b8026a1037220741086a290300210a2007290300210d2006200541b8026a10372206200c200d7c220f3703002006200f200d54ad200a200e7c7c37030820014198066a290300210d20014190066a290300210a200141a8056a200541b8026a103722064200200c200a200d845022071b220d200b7d220a20062903007c220f370300200641086a2206200f200a54ad20062903004200200e20071b20107d200d200b54ad7d7c7c3703001004210b200541b0026a2206200541c8026a280200360200200541a8026a2207200541c0026a29030037030020054190026a2208200441086a29000037030020054198026a2209200441106a280000360200200520052903b8023703a0022005200429000037038802200541386a2001103d200541286a2007290300370300200541306a2006280200360200200541106a2008290300370300200541186a2009280200360200200520052903a0023703202005200529038802370308200541206a20022003200c200e200541086a200b200b423f872005290338200541406b29030010112000200e3703082000200c370300200541d0026a24000bbe0102027f037e230041e0006b22012400200141c8006a102f200141c8006a200041206a1030044010080b200141306a1031200141206a200141306a1032200141106a20012903202204200041f0026a220229030022037d200141286a290300200041f8026a220029030022057d2004200354ad7d20032005102b20012001290310200141186a29030042e8074200102a20022003200129030022047d37030020002005200141086a2903007d2003200454ad7d370300200141e0006a24000b08002000104d10010b3501027f034002402002411447047f200020026a2d0000200120026a2d0000460d0141010520030b0f0b200241016a21020c000b000b08002000104d10020b4302017f017e230041206b220224002002200241106a2001200241106a1005104f200229030021032000200241086a29030037030820002003370300200241206a24000b8d0102027f027e230041d0006b22012400200141286a1029200041f8066a290000210320004188076a2800002102200141086a20004180076a2900002204370300200141106a2002360200200141406b2004370300200141c8006a20023602002001200337030020012003370338200141186a20002001290328200141306a29030020011034200141d0006a24000b8c0902057f0b7e230041c0026b22052400200541d8016a2002200342e4004200102b200541c8016a20052903d801200541e0016a29030042e4004200102a200541a8026a102f200541b8016a20052903c801220a200541d0016a290300220b200141f8016a3100004200102b200541a8016a20052903b801200541c0016a29030042e4004200102a200541e8016a20012002200a7d2003200b7d2002200a54ad7d104520054198016a200a20052903a801220c7d2211200b200541b0016a29030022127d200a200c54ad7d221320014180046a29030020014188046a290300102b200541a0016a2903002110200529039801210f20052903e801220d200141e0056a290300427f8558200541f0016a290300220e200141e8056a290300427f85221458200e2014511b45044010080b024002402004200141f8066a1030450d002004200541a8026a1030450d00200141d8046a200410372206290300200141b0046a290300200141b8046a29030084420052ad544100200641086a290300501b0d0020014180056a220620041037220741086a290300210b2007290300210a2006200410372206200a200c7c220c3703002006200c200a54ad200b20127c7c3703082011210a2013210b0c010b20054188016a20012903800420014188046a290300200a200b102b20054190016a2903002110200529038801210f0b024020012903e005200141e8056a22062903008450450440200541f8006a20012903800420014188046a290300200a200b102b200541e8006a200529037820054180016a290300200d42017c220a200e200a200d54ad7c220b102a200541d8006a2005290368220f200541f0006a2903002210200d200e102b2001200a3703e0052006200b37030020014190066a2206200f2006290300220a7c220b37030020014198066a2206200b200a54ad201020062903007c7c370300200541e0006a29030021102005290358210f0c010b2001200d3703e0052006200e3703000b200141d8046a2206200541a8026a1037220741086a290300210b2007290300210a2006200541a8026a10372206200a200d7c220c3703002006200c200a54ad200b200e7c7c370308200541086a20014190066a29030020014198066a290300200d200e102b2005290308210a200141a8056a200541a8026a10372206200a200f7d220b20062903007c220c370300200641086a2206200c200b54ad2006290300200541106a29030020107d200a200f54ad7d7c7c3703001004210a200541a0026a2206200541b8026a28020036020020054198026a2207200541b0026a29030037030020054180026a2208200441086a29000037030020054188026a2209200441106a280000360200200520052903a80237039002200520042900003703f801200541c8006a2001103d200541386a2007290300370300200541406b2006280200360200200541206a2008290300370300200541286a20092802003602002005200529039002370330200520052903f801370318200541306a20022003200d200e200541186a200a200a423f872005290348200541d0006a29030010112000200e3703082000200d370300200541c0026a24000bb80302037f067e230041b0016b22012400200141d8006a200041001036200141e0006a29030021062001290358210520014198016a102f200141086a20004180046a29030020004188046a29030020052006102b200041a8056a20014198016a103722022002290300220420012903087c2207370300200241086a22022007200454ad2002290300200141106a2903007c7c37030020004180056a220220014198016a1037220341086a290300210820032903002104200220014198016a1037220242003703082002420037030020014190016a20004188076a280000220236020020014188016a20004180076a2900002209370300200041f8066a2900002107200141386a2009370300200141406b2002360200200120073703800120012007370330200141c8006a2000200420057c22052005200454ad200620087c7c2206200141306a102d200141f0006a200141a0016a2903002204370300200141f8006a200141a8016a2802002202360200200141206a2004370300200141286a20023602002001200129039801220437036820012004370318200141186a200520062001290348200141d0006a2903001022200141b0016a24000bbe0202017f027e230041a0016b2203240020034188016a102f027e2002044020034180016a20034198016a2802002202360200200341f8006a20034190016a2903002204370300200341106a2004370300200341186a20023602002003200329038801220437037020032004370308200341206a2001200341086a104120032903202104200341286a29030020014180056a20034188016a1037220141086a2903007c2004200129030022057c2204200554ad7c0c010b200341e8006a20034198016a2802002202360200200341e0006a20034190016a2903002204370300200341386a2004370300200341406b20023602002003200329038801220437035820032004370330200341c8006a2001200341306a104120032903482104200341d0006a2903000b21052000200437030020002005370308200341a0016a24000b7f01037f230041106b2203240020002003410c6a200110472204280200220245044041c000104a220241386a4200370300200241306a420037030020022001290000370010200241206a200141106a280000360000200241186a200141086a2900003700002000200328020c2004200210480b200341106a2400200241306a0b4d02027f027e230041206b22012400200141086a102f200041d8046a200141086a103722022903002203200241086a2903002204845045044020002003200410390b2000103a200141206a24000bcd0702067f067e230041d0026b22032400200341f8016a2000103b200341b8026a102f200041d8046a2204200341b8026a1037220629030020015a200641086a290300220920025a20022009511b45044010080b200341e8016a200020012002103c20034188016a20032903e8012209200341f0016a290300220b200041e0016a3100004200102b200341c8016a2009200b200041c0026a3100004200102b200341a8016a2009200b20004190026a3100004200102b200341f8006a20032903880120034190016a29030042e4004200102b200341d8016a2009200b428c7c427f102b200341b8016a20032903c801200341d0016a29030042e8074200102a20034198016a20032903a801200341b0016a29030042e8074200102a200341e8006a20092003290378220c7d220a20032903d8017c220d200d200a54ad200341e0016a290300200b20034180016a290300220e7d2009200c54ad7d7c7c220b20012002102b200041e0056a22062006290300220920017d370300200041e8056a2207200729030020027d2009200154ad7d370300200041f0026a220520032903b801220920052903007c220a370300200041f8026a2205200a200954ad200341c0016a29030020052903007c7c3703002004200341b8026a1037220541086a290300210a200529030021092004200341b8026a10372204200920017d3703002004200a20027d2009200154ad7d3703082003200341a0016a2903003703a80220032003290398013703a002200041c0066a200341a0026a102c200341d8006a2003290368200341f0006a29030020004190066a29030020004198066a2205290300102b200341c8006a2003290358200341e0006a29030020004180046a29030020004188046a2208290300102b200041a8056a200341b8026a10372204200429030022092003290348220a7d370300200441086a22042004290300200341d0006a2903007d2009200a54ad7d370300200629030022092007290300220a8450450440200341386a2000290380042008290300200c200e102b200341286a2003290338200341406b2903002009200a102a2000200329032822092000290390067c220c370390062005200c200954ad200341306a29030020052903007c7c3703000b1004210920034198026a2204200341c8026a28020036020020034190026a2206200341c0026a290300370300200320032903b80237038802200341186a2000103d200341086a2006290300370300200341106a20042802003602002003200329038802370300200320012002200d200b20092009423f872003290318200341206a2903001021200341d0026a24000bde0202037f047e23004190016b22012400200141386a200041011036200141f8006a102f200141286a200041001036200120004180046a29030020004188046a29030020012903282206200141306a2903002205102b200041a8056a200141f8006a103722022002290300220420012903007c2207370300200241086a22022007200454ad2002290300200141086a2903007c7c37030020004180056a2202200141f8006a1037220341086a2903002107200329030021042002200141f8006a103722024200370308200242003703002001200420067c2206200454ad200520077c7c220437036820012006370360200141f8006a200141e0006a102c200141d0006a20014180016a2903002205370300200141d8006a20014188016a2802002202360200200141186a2005370300200141206a200236020020012001290378220537034820012005370310200141106a20062004102320014190016a24000b930102027f027e230041d0006b22022400200241206a102f200241186a200241306a2802002203360200200241106a200241286a2903002204370300200220022903202205370308200241c8006a2003360200200241406b200437030020022005370338200141d8046a200241386a1037220129030021042000200141086a29030037030820002004370300200241d0006a24000bf60202027f037e230041d0006b22042400200441206a200141e0056a290300220642808090bbbad6adf00d7c2207200141e8056a2903002007200654ad7c42808090bbbad6adf00d4200102a200441406b200242808090bbbad6adf00d7c220620032006200254ad7c220720062007102b200441306a2004290340220820067d200441c8006a29030020077d2008200654ad7d42808090bbbad6adf00d4200102a200441106a20042903204200200141d0036a290300200141d8036a2903008442005222051b2207200141a0036a290300200141a8036a29030084420052ad7c22062005ad22087d2006200754ad200441286a290300420020051b7c2006200854ad7d20022003102b200420042903102206200441386a2903002202423f86200429033042018884420020051b22037d200441186a2903002002420188420020051b7d2006200354ad7d42808090bbbad6adf00d4200102a2000200441086a29030037030820002004290300370300200441d0006a24000b9e0202017f037e230041d0006b22022400027e200141e0056a290300200141e8056a29030084500440200141d0036a2903002203200141a0036a2903007c2204200354ad200141d8036a290300200141a8036a2903007c7c0c010b200241406b200142808090bbbad6adf00d4200103c200241306a20022903402204200241c8006a290300220342054200102b200241106a20042003200141b0016a3100004200102b200241206a2002290330200241386a29030042e4004200102a20022002290310200241186a29030042e4004200102a200241086a2903002003200241286a2903007c2004200229032022057c2203200554ad7c7c200320022903007c2204200354ad7c0b21032000200437030020002003370308200241d0006a24000b980702077f087e230041b0026b2204240020044188016a2000103b200441c8016a102f200041d8046a2207200441c8016a1037220529030020025a200541086a290300220b20035a2003200b511b45044010080b200441f8006a200041011036200429037820044180016a29030084504504402000103a0b200441d8006a200041c8016a310000420020022003102b200441c8006a2004290358200441e0006a29030042e4004200102a200441e8006a20002004290348220b200441d0006a290300220e103c200441f0006a290300210f20042903682110200041e0056a22082008290300220c200b7d370300200041e8056a22092009290300200e7d200c200b54ad7d3703002007200441c8016a1037220541086a290300210d2005290300210c2007200441c8016a10372205200c20027d3703002005200d20037d200c200254ad7d3703082007200110372205290300210c200541086a29030021112007200110372207200c2002200b7d220d7c221237030020072012200c54ad20112003200e7d2002200b54ad7d220b7c7c370308200441386a20004190066a220729030020004198066a220529030020022003102b200041a8056a220a200441c8016a1037220620062903002202200429033822037d370300200641086a22062006290300200441406b2903007d2002200354ad7d370300200441286a20072903002005290300200d200b102b200a2001103722062006290300220220042903287c2203370300200641086a22062003200254ad2006290300200441306a2903007c7c370300200441186a20004180046a29030020004188046a2903002010200f102b200441086a2004290318200441206a29030020082903002009290300102a200441a0016a2200200141086a290000370300200441a8016a2208200141106a280000360200200441b8016a2209200441d0016a290300370300200441c0016a2206200441d8016a28020036020020072004290308220220072903007c220337030020052003200254ad200441106a29030020052903007c7c3703002004200129000037039801200420042903c8013703b001200441e8016a2009290300370300200441f0016a200628020036020020044180026a200029030037030020044188026a2008280200360200200420042903b0013703e00120042004290398013703f8012004200b3703a8022004200d3703a00220044190026a4180081012200441e0016a200441f8016a200441a0026a1024200441b0026a24000b4201017e230041306b22012400200141186a1031200141086a200141186a1032200129030821022000200141106a29030037030820002002370300200141306a24000b1e002000200141e8056a2903003703082000200141e0056a2903003703000bae0102027f027e230041206b2203240020014198066a290300210520014190066a2903002106200341106a200141d8046a200210372204290300200441086a29030020062005102b200141a8056a200210372102200320032903102205200229030022067d200341186a290300200241086a2903007d2005200654ad7d20014180046a29030020014188046a290300102a2000200341086a29030037030820002003290300370300200341206a24000b23002000200141d8046a2002103722022903003703002000200241086a2903003703080ba20202017f037e230041d0006b220224002000027e200141e0056a290300200141e8056a29030084500440200141a8036a290300200141d8036a2903007d200141a0036a2903002203200141d0036a290300220554ad7d2104200320057d0c010b200241406b200142808090bbbad6adf00d4200103c200241306a20022903402204200241c8006a290300220342054200102b200241106a20042003200141e0016a3100004200102b200241206a2002290330200241386a29030042e4004200102a20022002290310200241186a29030042e4004200102a2003200241286a2903007d20042002290320220354ad7d200241086a2903007d200420037d22032002290300220554ad7d2104200320057d0b37030020002004370308200241d0006a24000bc70102017f037e230041d0006b22042400200441306a2002200342054200102b200441106a200141b0016a310000420020022003102b200441206a2004290330200441386a29030042e4004200102a20042004290310200441186a29030042e4004200102a200441406b20012002200429032022057d2206200429030022077d2003200441286a2903007d2002200554ad7d200441086a2903007d2006200754ad7d1045200429034021022000200441c8006a29030037030820002002370300200441d0006a24000be50302027f097e230041e0006b22042400200441206a420042808090bbbad6adf00d200141a0036a290300200141a8036a290300845022051b220e4200200141e0056a290300220a200141e8056a290300220b102b200441d0006a20022003428080808080c4cfcbe60042ab9cc8bccff3cbc001102b200441406b200a200b200141d0036a2903002202200141d8036a2903002203102b200441106a20042903202206420186220820042903507c22072007200854ad200441d8006a290300200441286a2903004201862006423f88847c7c20022003102b200441306a20042903402202200441c8006a290300220320022003102b200441186a290300200429033022034200428080808080e2e7a5b37f20051b7c2202200354ad200441386a290300420042958ea4dee7f9a5e00020051b7c7c7c200220042903107c2209200254ad7c220c200942017c220d200954ad7c210820092107200c210603402008423f86200d42018884220320075a2008420188220220065a20022006511b45044020042009200c20032002102a2004290300220620037c220d200654ad200441086a29030020027c7c210820032107200221060c010b0b20002007200a200e7c22027d37030020002006200b2002200a54ad7c7d2007200254ad7d370308200441e0006a24000bed0102017f037e230041d0006b22042400200141e0056a290300200258200141e8056a290300220520035820032005511b45044010080b200441406b200120022003103c200441306a20042903402203200441c8006a290300220242054200102b200441106a20032002200141e0016a3100004200102b200441206a2004290330200441386a29030042e4004200102a20042004290310200441186a29030042e4004200102a20002003200429032022057d2206200429030022077d37030020002002200441286a2903007d2003200554ad7d200441086a2903007d2006200754ad7d370308200441d0006a24000b890101027f200041046a2103024020002802042200044002400340024002402002200041106a220410490440200028020022040d012001200036020020000f0b200420021049450d03200041046a210320002802042204450d01200321000b20002103200421000c010b0b2001200036020020030f0b200120003602000c010b200120033602000b20030baf0201027f20032001360208200342003702002002200336020020002802002802002201044020002001360200200228020021030b2003200320002802042205463a000c03400240024020032005460d00200328020822012d000c0d002001200128020822022802002204460440024020022802042204450d0020042d000c0d002004410c6a21030c030b200320012802004704402001104b2001280208220128020821020b200141013a000c200241003a000c2002104c0c010b02402004450d0020042d000c0d002004410c6a21030c020b200320012802004604402001104c2001280208220128020821020b200141013a000c200241003a000c2002104b0b2000200028020841016a3602080f0b200141013a000c200220022005463a000c200341013a0000200221030c000b000b3a01037f034020024114470440200020026a2d00002203200120026a2d0000220449044041010f0b200241016a2102200320044d0d010b0b41000b0b002000410120001b10640b5101027f200020002802042201280200220236020420020440200220003602080b200120002802083602082000280208220220022802002000474102746a200136020020002001360208200120003602000b5101027f200020002802002201280204220236020020020440200220003602080b200120002802083602082000280208220220022802002000474102746a200136020020002001360208200120003602040b2601017f230041106b22012400200141003a000f20002001410f6a104e200141106a240020000b2601017f03402002411446450440200020026a20012d00003a0000200241016a21020c010b0b0b4501027e034020020440200442088620034238888421042002417f6a210220013100002003420886842103200141016a21010c010520002003370300200020043703080b0b0b7801027f20002101024003402001410371044020012d0000450d02200141016a21010c010b0b2001417c6a21010340200141046a22012802002202417f73200241fffdfb776a7141808182847871450d000b0340200241ff0171450d01200141016a2d00002102200141016a21010c000b000b200120006b0b5a01027f02402002410a4d0440200020024101743a0000200041016a21030c010b200241106a4170712204104a21032000200236020420002004410172360200200020033602080b200320012002106b200220036a41003a00000b1600200041003602082000420037020020004100105a0bb80101047f230041306b22012400200141286a4100360200200141206a4200370300200141186a42003703002001420037031041012103024002400240200120001054220028020420002d00002202410176200241017122041b220241014d0440200241016b0d032000280208200041016a20041b2c0000417f4c0d010c030b200241374b0d010b200241016a21030c010b2002105820026a41016a21030b20012003360210200141106a410472101d200141306a240020030b4d01017f20004200370200200041086a2202410036020020012d0000410171450440200020012902003702002002200141086a28020036020020000f0b200020012802082001280204105120000b2d01017f20002001280208200141016a20012d0000220041017122021b2001280204200041017620021b10201a0bfa0101057f230041206b22022400024020002802042203200028020022046b22052001490440200028020820036b200120056b22044f04400340200341003a00002000200028020441016a22033602042004417f6a22040d000c030b000b2000200110662106200241186a200041086a3602002002410036021441002101200604402006104a21010b200220013602082002200120056a22033602102002200120066a3602142002200336020c0340200341003a00002002200228021041016a22033602102004417f6a22040d000b2000200241086a1067200241086a10680c010b200520014d0d002000200120046a3602040b200241206a24000be00102027f027e23004180016b22012400200141c8006a4100360200200141406b4200370300200141386a4200370300200141206a200041086a2900002204370300200141286a200041106a280000220236020020002900002103200141086a2004370300200141106a20023602002001420037033020012003370318200141d8006a2004370300200141e0006a2002360200200141f0006a2004370300200141f8006a2002360200200120033703002001200337035020012003370368200141306a2001101c210020012802302102200041046a101d20014180016a240020020b1e01017f03402000044020004108762100200141016a21010c010b0b20010b25002000200120026a417f6a220241087641fcffff07716a280200200241ff07714102746a0b2f01017f2000280208200149044020011064200028020020002802041065210220002001360208200020023602000b0b2801017f200028020820002802046b2201410874417f6a410020011b200028021420002802106a6b0b2501017f200028020821020340200120024645044020002002417c6a22023602080c010b0b0ba10202057f017e230041206b22052400024020002802082202200028020c2203470d0020002802042204200028020022064b04402000200420022004200420066b41027541016a417e6d41027422036a105e22023602082000200028020420036a3602040c010b200541086a200320066b2202410175410120021b220220024102762000410c6a105f2103200028020821042000280204210203402002200446450440200328020820022802003602002003200328020841046a360208200241046a21020c010b0b20002902002107200020032902003702002003200737020020002902082107200020032902083702082003200737020820031060200028020821020b200220012802003602002000200028020841046a360208200541206a24000b2501017f200120006b220141027521032001044020022000200110630b200220034102746a0b4f01017f2000410036020c200041106a2003360200200104402001410274104a21040b200020043602002000200420024102746a22023602082000200420014102746a36020c2000200236020420000b2b01027f200028020821012000280204210203402001200247044020002001417c6a22013602080c010b0b0b1b00200120006b22010440200220016b22022000200110630b20020b4f01037f20012802042203200128021020012802146a220441087641fcffff07716a21022000027f410020032001280208460d001a2002280200200441ff07714102746a0b360204200020023602000b8d0301037f024020002001460d00200120006b20026b410020024101746b4d044020002001200210651a0c010b20002001734103712103027f024020002001490440200020030d021a410021030340200120036a2105200020036a2204410371450440200220036b210241002103034020024104490d04200320046a200320056a280200360200200341046a21032002417c6a21020c000b000b20022003460d04200420052d00003a0000200341016a21030c000b000b024020030d002001417f6a21040340200020026a22034103714504402001417c6a21032000417c6a2104034020024104490d03200220046a200220036a2802003602002002417c6a21020c000b000b2002450d042003417f6a200220046a2d00003a00002002417f6a21020c000b000b2001417f6a210103402002450d03200020026a417f6a200120026a2d00003a00002002417f6a21020c000b000b200320056a2101200320046a0b210303402002450d01200320012d00003a00002002417f6a2102200341016a2103200141016a21010c000b000b0b9b0101047f230041106b220124002001200036020c2000047f41e80c200041086a2202411076220041e80c2802006a220336020041e40c41e40c280200220420026a41076a417871220236020002400240200341107420024d044041e80c200341016a360200200041016a21000c010b2000450d010b200040000d0010000b20042001410c6a4104106541086a0541000b2100200141106a240020000bfc0801067f03400240200020046a2105200120046a210320022004460d002003410371450d00200520032d00003a0000200441016a21040c010b0b200220046b210602402005410371220745044003402006411049450440200020046a2203200120046a2205290200370200200341086a200541086a290200370200200441106a2104200641706a21060c010b0b027f2006410871450440200120046a2103200020046a0c010b200020046a2205200120046a2204290200370200200441086a2103200541086a0b21042006410471044020042003280200360200200341046a2103200441046a21040b20064102710440200420032f00003b0000200341026a2103200441026a21040b2006410171450d01200420032d00003a000020000f0b024020064120490d002007417f6a220741024b0d00024002400240024002400240200741016b0e020102000b2005200120046a220328020022073a0000200541016a200341016a2f00003b0000200041036a2108200220046b417d6a2106034020064111490d03200420086a2203200120046a220541046a2802002202410874200741187672360200200341046a200541086a2802002207410874200241187672360200200341086a2005410c6a28020022024108742007411876723602002003410c6a200541106a2802002207410874200241187672360200200441106a2104200641706a21060c000b000b2005200120046a220328020022073a0000200541016a200341016a2d00003a0000200041026a2108200220046b417e6a2106034020064112490d03200420086a2203200120046a220541046a2802002202411074200741107672360200200341046a200541086a2802002207411074200241107672360200200341086a2005410c6a28020022024110742007411076723602002003410c6a200541106a2802002207411074200241107672360200200441106a2104200641706a21060c000b000b2005200120046a28020022073a0000200041016a21082004417f7320026a2106034020064113490d03200420086a2203200120046a220541046a2802002202411874200741087672360200200341046a200541086a2802002207411874200241087672360200200341086a2005410c6a28020022024118742007410876723602002003410c6a200541106a2802002207411874200241087672360200200441106a2104200641706a21060c000b000b200120046a41036a2103200020046a41036a21050c020b200120046a41026a2103200020046a41026a21050c010b200120046a41016a2103200020046a41016a21050b20064110710440200520032d00003a00002005200328000136000120052003290005370005200520032f000d3b000d200520032d000f3a000f200541106a2105200341106a21030b2006410871044020052003290000370000200541086a2105200341086a21030b2006410471044020052003280000360000200541046a2105200341046a21030b20064102710440200520032f00003b0000200541026a2105200341026a21030b2006410171450d00200520032d00003a00000b20000b2e01017f2001200028020820002802006b2200410174220220022001491b41ffffffff07200041ffffffff03491b0b6701017f20002802002000280204200141046a1069200028020021022000200128020436020020012002360204200028020421022000200128020836020420012002360208200028020821022000200128020c3602082001200236020c200120012802043602000b2b01027f200028020821012000280204210203402001200247044020002001417f6a22013602080c010b0b0b270020022002280200200120006b22016b2202360200200141014e044020022000200110651a0b0b190020004200370200200041086a41003602002000106d20000b10002002044020002001200210651a0b0b2001017f20002001104a2202360200200020023602042000200120026a3602080b2201017f03402001410c470440200020016a4100360200200141046a21010c010b0b0bde0b02057f047e230041b0096b2200240010a0011009220110642203100a200041a0026a200041d8006a20032001106f220241001070200041a0026a107102400240200041a0026a1072450d0020002802a402450d0020002802a0022d000041c001490d010b10000b200041a0016a200041a0026a107320002802a401220141094f044010000b20002802a00121030340200104402001417f6a210120033100002005420886842105200341016a21030c010b0b024002402005500d0041b60a107420055104402002410110750c020b41bb0a1074200551044020004180026a104d1a200220004180026a1076200041a0026a1077210320004180016a20004190026a2802002201360200200041f8006a20004188026a2903002205370300200041186a2001360200200041106a20053703002000200029038002220637037020004190016a200537030020004198016a2001360200200041a8016a2005370300200041b0016a2001360200200020063703082000200637038801200020063703a0012003200041086a1028200310780c020b41bf0a107420055104402002410210750c020b41c30a107420055104402002410310750c020b41cd0a107420055104402002410410750c020b41d60a107420055104402002410510750c020b41db0a107420055104402002410610750c020b41e40a10742005510440200042003703a801200042003703a0012002200041a0016a1079200041a0026a1077220120002903a00120002903a8011039200110780c020b41e90a10742005510440200041a0016a104d2101200041c8016a22034200370300200042003703c0012002107a410347044010000b200041a0026a200241011070200041a0026a2001107b200041a0026a200241021070200041386a200041a0026a107c2003200041406b290300370300200020002903383703c001200041a0026a1077210220004180016a200041b0016a2802002201360200200041f8006a20002903a8012205370300200041306a2001360200200041286a2005370300200020002903a00122063703702003290300210720002903c001210820004190016a200537030020004198016a2001360200200041d8016a2005370300200041e0016a2001360200200020063703202000200637038801200020063703d0012002200041206a20082007103e200041e8016a1019210120004198026a410036020020004190026a420037030020004188026a4200370300200042003703800220004180026a42014200101b21032000280280022104200341046a101d200120041017200142014200101f220128020c200141106a28020047044010000b20012802002001280204100f200128020c22030440200120033602100b200210780c020b41f20a1074200551044020024107107d0c020b41870b1074200551044020024108107d0c020b41930b1074200551044020024109107d0c020b419c0b107420055104402002107a410247044010000b200041a0026a200241011070200041a0026a107e2101200041c8006a200041a0026a10772203200141004710362000200041d0006a2903003703a801200020002903483703a001200041a0016a107f200310780c020b41a80b107420055104402002410a1080010c020b41b20b107420055104402002410b1080010c020b41be0b107420055104402002410c107d0c020b41c80b107420055104402002410d107d0c020b41d10b107420055104402002410e1081010c020b41e90b107420055104402002410f1081010c020b41830c107420055104402002108201200041a0026a1077220241e0016a2d00002103200041a0016a101922012003108301101720012003108401200128020c200141106a28020047044010000b20012802002001280204100f200128020c22030440200120033602100b200210780c020b418b0c10742005510440200241101085010c020b419a0c10742005510440200241111085010c020b41b00c10742005510440200241121081010c020b41c20c10742005520d00200241131081010c010b10000b108601200041b0096a24000b0d00200020012002411c1087010bd00202067f017e230041106b220324002001280208220520024b0440200341086a200110a50120012003280208200328020c109d0136020c2003200110a501410021052001027f410020032802002207450d001a410020032802042208200128020c2206490d001a200820062006417f461b210420070b360210200141146a2004360200200141003602080b200141106a210603402001280214210402402005200249044020040d01410021040b20002006280200200441141087011a200341106a24000f0b2003200110a50141002104027f410020032802002205450d001a410020032802042208200128020c2207490d001a200820076b2104200520076a0b2105200120043602142001200536021020032006410020052004109d0110a4012001200329030022093702102001200128020c2009422088a76a36020c2001200128020841016a22053602080c000b000b4101017f200028020445044010000b0240200028020022012d0000418101470d00200028020441014d047f100020002802000520010b2c00014100480d0010000b0b980101037f200028020445044041000f0b20001071200028020022022c0000220141004e044020014100470f0b027f4101200141807f460d001a200141ff0171220341b7014d0440200028020441014d047f100020002802000520020b2d00014100470f0b4100200341bf014b0d001a2000280204200141ff017141ca7e6a22014d047f100020002802000520020b20016a2d00004100470b0bd60101047f20011088012204200128020422024b04401000200128020421020b200128020021052000027f02400240200204404100210120052c00002203417f4a0d01027f200341ff0171220141bf014d04404100200341ff017141b801490d011a200141c97e6a0c010b4100200341ff017141f801490d001a200141897e6a0b41016a21010c010b4101210120050d000c010b41002103200120046a20024b0d0020022001490d00410020022004490d011a200120056a2103200220016b20042004417f461b0c010b41000b360204200020033602000b3901027e42a5c688a1c89ca7f94b210103402000300000220250450440200041016a2100200142b383808080207e20028521010c010b0b20010b2a01017f23004190076b22022400200010820120021077220020011101002000107820024190076a24000b3401017f230041206b220224002000107a410247044010000b200241086a200041011070200241086a2001107b200241206a24000be30d01047f230041206b220424002000104d1a200042aecfb0eaafca83d5f800370318200041186a200041206a104d220110890145044020012000290300370300200141106a200041106a280200360200200141086a200041086a2903003703000b200441086a102f200041306a200441186a280200360000200041286a200441106a29030037000020002004290308370020200041386a106a2102200041c8006a220142f4b6fbddebefc6a0be7f3703002001200041d0006a106a2203108a0145044020032002108b010b200041e0006a106a2102200041f0006a220142adba859b98e9ace2203703002001200041f8006a106a2203108a0145044020032002108b010b200041003a00880120004190016a220142cdfcf8cf8ff195f2bd7f370300200120004198016a108c01450440200020002d0088013a0098010b200041003a00a001200041a8016a220142cdb5db92e197a9f62b3703002001200041b0016a108c01450440200020002d00a0013a00b0010b200041003a00b801200041c0016a220142ebe58dbf9aef9292693703002001200041c8016a108c01450440200020002d00b8013a00c8010b200041003a00d001200041d8016a2201429fa6e3f1dbcc84ce5c3703002001200041e0016a108c01450440200020002d00d0013a00e0010b200041003a00e801200041f0016a220142ffbdff84fdbf99da783703002001200041f8016a108c01450440200020002d00e8013a00f8010b200041003a00800220004188026a220142f98dbfc7909185bd7a370300200120004190026a108c01450440200020002d0080023a0090020b200041003a009802200041a0026a220142d9b2a6f5b2dcb7e8f0003703002001200041a8026a108c01450440200020002d0098023a00a8020b200041003a00b002200041b8026a220142ffc8e896ddf1bfab2f3703002001200041c0026a108c01450440200020002d00b0023a00c0020b200042003703d002200041d8026a22024200370300200041e0026a22014298c59ca4d3a599e40a3703002001200041f0026a108d01450440200020002903d0023703f002200041f8026a20022903003703000b200042003703800320004188036a2202420037030020004190036a220142d0becd9f80e7bf83877f3703002001200041a0036a108d0145044020002000290380033703a003200041a8036a20022903003703000b200042003703b003200041b8036a22024200370300200041c0036a220142c0dbb48fe2b8e4ee8c7f3703002001200041d0036a108d01450440200020002903b0033703d003200041d8036a20022903003703000b200042003703e003200041e8036a22024200370300200041f0036a220142f9aee386918bfcf62c370300200120004180046a108d01450440200020002903e0033703800420004188046a20022903003703000b200042003703900420004198046a22024200370300200041a0046a220142e997cf8b9fd19aeb133703002001200041b0046a108d0145044020002000290390043703b004200041b8046a20022903003703000b200041c4046a22014200370200200041dc046a22024200370200200041d0046a220342869aefc6e583ebdb5e370300200020013602c004200041d8046a2201200236020020032001108e014504402001200041c0046a108f010b200041ec046a2201420037020020004184056a22024200370200200041f8046a220342899cb3c6d0a8aad3d800370300200020013602e80420004180056a2201200236020020032001108e014504402001200041e8046a108f010b20004194056a22014200370200200041ac056a22024200370200200041a0056a2203428c88b7a6a994f2a4e9003703002000200136029005200041a8056a2201200236020020032001108e01450440200120004190056a108f010b200042003703c005200041c8056a22024200370300200041d0056a220142e8c3d4f59f85c9c0c5003703002001200041e0056a108d01450440200020002903c0053703e005200041e8056a20022903003703000b200042003703f005200041f8056a2202420037030020004180066a22014298e3a7fec4dadbfaee00370300200120004190066a108d01450440200020002903f0053703900620004198066a20022903003703000b200041a0066a2201104d1a200041b8066a220342da999cdd86a3a7e9583703002003200041c0066a104d220210890145044020022001290300370300200241106a200141106a280200360200200241086a200141086a2903003703000b200041d8066a2201104d1a200041f0066a220342f2c0dec7c1e2b382ae7f3703002003200041f8066a104d220210890145044020022001290300370300200241106a200141106a280200360200200241086a200141086a2903003703000b200441206a240020000bd90200200041f0066a200041f8066a109001200041b8066a200041c0066a10900120004180066a20004190066a109101200041d0056a200041e0056a109101200041a0056a200041a8056a109201200041f8046a20004180056a109201200041d0046a200041d8046a109201200041a0046a200041b0046a109101200041f0036a20004180046a109101200041c0036a200041d0036a10910120004190036a200041a0036a109101200041e0026a200041f0026a109101200041b8026a200041c0026a109301200041a0026a200041a8026a10930120004188026a20004190026a109301200041f0016a200041f8016a109301200041d8016a200041e0016a109301200041c0016a200041c8016a109301200041a8016a200041b0016a10930120004190016a20004198016a109301200041f0006a200041f8006a109401200041c8006a200041d0006a109401200041186a200041206a1090010b5402017f017e230041306b220224002000107a410247044010000b200241186a200041011070200241086a200241186a107c200229030821032001200241106a29030037030820012003370300200241306a24000b2601017f02402000280204450d0020002802002d000041c001490d00200010950121010b20010bbb0102027f027e230041406a2202240020001071200241386a20001073200228023c2103024002402000280204450d00200341144b0d0020002802002d000041c001490d010b10000b200241206a104d2003411420034114491b22006b41146a2002280238200010651a200241186a200241306a2802002200360200200241106a200241286a2903002204370300200220022903202205370308200141106a2000360000200141086a200437000020012005370000200241406b24000b9e0102027f027e230041106b22022400200110710240024020011072450d002001280204450d0020012802002d000041c001490d010b10000b200241086a20011073200228020c220141114f044010000b20022802082103034020010440200542088620044238888421052001417f6a210120033100002004420886842104200341016a21030c010b0b2000200437030020002005370308200241106a24000b5001017f230041b0076b2202240020001082012002200241106a1077220020011100002002200241086a2903003703a807200220022903003703a007200241a0076a107f20001078200241b0076a24000b7d01037f230041106b22012400200010710240024020001072450d002000280204450d0020002802002d000041c001490d010b10000b200141086a20001073200128020c220041024f044010000b200128020821020340200004402000417f6a210020022d00002103200241016a21020c010b0b200141106a240020030b6f01037f230041206b22022400200241086a101922012000290300200041086a22032903001096011017200120002903002003290300101f220028020c200041106a28020047044010000b20002802002000280204100f200028020c22010440200020013602100b200241206a24000b8f0202027f027e230041b0086b22022400200241c0076a104d1a2000200241c0076a1076200241306a10772100200241e8076a200241d0076a2802002203360200200241e0076a200241c8076a2903002204370300200220022903c00722053703d807200241f8076a200437030020024180086a2003360200200220053703f00720024198086a20024180086a280200220336020020024190086a200241f8076a2903002204370300200241106a2004370300200241186a2003360200200220022903f00722043703880820022004370308200241206a2000200241086a20011104002002200241286a2903003703a808200220022903203703a008200241a0086a107f20001078200241b0086a24000b7101017f230041c0076b22022400200242003703a807200242003703a0072000200241a0076a10792002200241106a1077220020022903a00720022903a80720011108002002200241086a2903003703b807200220022903003703b007200241b0076a107f20001078200241c0076a24000b0e002000107a410147044010000b0b5801027f230041206b22012400200141186a4100360200200141106a4200370300200141086a42003703002001420037030020012000ad42ff01834200101b210020012802002102200041046a101d200141206a240020020b0c0020002001ad4200101f1a0bf90202037f047e230041e0086b22022400200242003703d807200242003703d007200241e0076a2203104d21042000107a410347044010000b200241406b200041011070200241306a200241406b107c2002200241386a2903003703d807200220022903303703d007200241406b200041021070200241406b2004107b200241406b1077210020024198086a200341106a280000220436020020024190086a200341086a29000022053703002002200329000022063703880820022903d807210720022903d0072108200241a8086a2005370300200241b0086a2004360200200220063703a008200241c8086a200241b0086a2802002203360200200241c0086a200241a8086a2903002205370300200241106a2005370300200241186a2003360200200220022903a00822053703b80820022005370308200241206a200020082007200241086a2001110a002002200241286a2903003703d808200220022903203703d008200241d0086a107f20001078200241e0086a24000b880101037f41d40c410136020041d80c2802002100034020000440034041dc0c41dc0c2802002201417f6a2202360200200141014845044041d40c4100360200200020024102746a22004184016a280200200041046a28020011010041d40c410136020041d80c28020021000c010b0b41dc0c412036020041d80c200028020022003602000c010b0b0b750020004200370210200042ffffffff0f370208200020023602042000200136020002402003410871450d00200010a20120024f0d002003410471044010000c010b200042003702000b02402003411071450d00200010a20120024d0d0020034104710440100020000f0b200042003702000b20000bff0201037f200028020445044041000f0b2000107141012102024020002802002c00002201417f4a0d00200141ff0171220341b7014d0440200341807f6a0f0b02400240200141ff0171220141bf014d0440024020002802042201200341c97e6a22024d047f100020002802040520010b4102490d0020002802002d00010d0010000b200241054f044010000b20002802002d000145044010000b4100210241b7012101034020012003460440200241384f0d030c0405200028020020016a41ca7e6a2d00002002410874722102200141016a21010c010b000b000b200141f7014d0440200341c07e6a0f0b024020002802042201200341897e6a22024d047f100020002802040520010b4102490d0020002802002d00010d0010000b200241054f044010000b20002802002d000145044010000b4100210241f701210103402001200346044020024138490d0305200028020020016a418a7e6a2d00002002410874722102200141016a21010c010b0b0b200241ff7d490d010b10000b20020bd20101057f230041406a22022400200241286a101922032000290300109801200328020c200341106a28020047044010000b02402003280200220520032802042206100b2204450440410021000c010b410021002002410036022020024200370318200241186a200410562005200620022802182205200228021c20056b100c417f47044020022002280218220041016a200228021c2000417f736a106f2001107b200421000b20022802182204450d002002200436021c0b200328020c22040440200320043602100b200241406b240020000bbf0401077f230041e0006b22022400200241306a101922052000290300109801200528020c200541106a28020047044010000b02402005280200220320052802042206100b2207450440410021000c010b410021002002410036022820024200370320200241206a200710562003200620022802202204200228022420046b100c417f47044002400240200241086a2002280220220041016a20022802242000417f736a106f2200280204044020002802002d000041c001490d010b200241c8006a106a1a0c010b200241d8006a20001073200010880121030240024002400240200228025822000440200228025c220620034f0d010b41002100200241d0006a41003602002002420037034841002104410021060c010b200241d0006a4100360200200242003703482000200620032003417f461b22046a21062004410a4b0d010b200220044101743a0048200241c8006a41017221030c010b200441106a4170712208104a21032002200436024c20022008410172360248200220033602500b03402000200646450440200320002d00003a0000200341016a2103200041016a21000c010b0b200341003a00000b024020012d0000410171450440200141003b01000c010b200128020841003a00002001410036020420012d0000410171450d00200141003602000b20012002290348370200200141086a200241d0006a280200360200200241c8006a106d200721000b20022802202203450d00200220033602240b200528020c22030440200520033602100b200241e0006a240020000b3501017f2000200147044020002001280208200141016a20012d0000220041017122021b2001280204200041017620021b10a1010b0bd50101057f230041406a22022400200241286a101922032000290300109801200328020c200341106a28020047044010000b02402003280200220520032802042206100b2204450440410021000c010b410021002002410036022020024200370318200241186a200410562005200620022802182205200228021c20056b100c417f470440200120022002280218220041016a200228021c2000417f736a106f107e3a0000200421000b20022802182204450d002002200436021c0b200328020c22040440200320043602100b200241406b240020000bf40102057f017e230041d0006b22022400200241386a101922032000290300109801200328020c200341106a28020047044010000b02402003280200220520032802042206100b2204450440410021000c010b410021002002410036023020024200370328200241286a200410562005200620022802282205200228022c20056b100c417f4704402002200241106a2002280228220041016a200228022c2000417f736a106f107c200229030021072001200241086a29030037030820012007370300200421000b20022802282204450d002002200436022c0b200328020c22040440200320043602100b200241d0006a240020000b8e0601097f230041f0016b22022400200241386a101922062000290300109801200628020c200641106a28020047044010000b02402006280200220320062802042204100b2208450440410021000c010b410021002002410036023020024200370328200241286a200810562003200420022802282207200228022c20076b100c417f47044002400240200241106a2002280228220041016a200228022c2000417f736a106f2203280204450d0020032802002d000041c001490d00200241b0016a20034101109c012100200241a0016a20034100109c01210920002802042103200241f8006a2107034020092802042003464100200028020822042009280208461b0d0220024188016a20032004411c1087012103200241d0006a104d210420074200370300200242003703700240200228028c0104402002280288012d000041bf014b0d010b10000b2003109501410247044010000b200241d8016a104d2105200241c0016a200341001070200241c0016a2005107b200241e0006a2205200241e8016a280200360200200220022903d8013703502002200241e0016a290300370358200241c0016a2003410110702002200241c0016a107c2007200241086a290300370300200220022903003703702001200241c0016a20041047220428020045044041c000104a220341306a2002290370370300200341186a200229035837030020032002290350370310200341386a2007290300370300200341206a2005280200360200200120022802c0012004200310480b20002000280204220320002802086a410020031b22033602042000280200220404402000200436020820032004109d0121052000027f200028020422034504404100210441000c010b4100210441002000280208220a2005490d001a20";

    private static String BINARY_1 = "";

    public static String BINARY = BINARY_0 + BINARY_1;

    public static final String FUNC_DIVSADDON = "DivsAddon";

    public static final String FUNC_REINVEST = "reinvest";

    public static final String FUNC_BUY = "buy";

    public static final String FUNC_IDD = "IDD";

    public static final String FUNC_CALCULATEETHEREUMRECEIVED = "calculateEthereumReceived";

    public static final String FUNC_EXITFEE = "exitFee";

    public static final String FUNC_EXIT = "exit";

    public static final String FUNC_WITHDRAW = "withdraw";

    public static final String FUNC_SELL = "sell";

    public static final String FUNC_TRANSFER = "transfer";

    public static final String FUNC_TOTALETHEREUMBALANCE = "totalEthereumBalance";

    public static final String FUNC_TOTALSUPPLY = "totalSupply";

    public static final String FUNC_MYTOKENS = "myTokens";

    public static final String FUNC_MYDIVIDENDS = "myDividends";

    public static final String FUNC_BALANCEOF = "balanceOf";

    public static final String FUNC_DIVIDENDSOF = "dividendsOf";

    public static final String FUNC_SELLPRICE = "sellPrice";

    public static final String FUNC_BUYPRICE = "buyPrice";

    public static final String FUNC_CALCULATETOKENSRECEIVED = "calculateTokensReceived";

    public static final WasmEvent ONTOKENSELL_EVENT = new WasmEvent("onTokenSell", Arrays.asList(new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(Uint128.class) , new WasmEventParameter(Uint128.class) , new WasmEventParameter(Uint128.class) , new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent ONREINVESTMENT_EVENT = new WasmEvent("onReinvestment", Arrays.asList(new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(Uint128.class) , new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent ONWITHDRAW_EVENT = new WasmEvent("onWithdraw", Arrays.asList(new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent TRANSFER_EVENT = new WasmEvent("Transfer", Arrays.asList(new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent TESTDATA_EVENT = new WasmEvent("TestData", Arrays.asList(new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(Uint128.class) , new WasmEventParameter(Uint128.class) , new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent ONTOKENPURCHASE_EVENT = new WasmEvent("onTokenPurchase", Arrays.asList(new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(Uint128.class) , new WasmEventParameter(Uint128.class) , new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(Uint128.class) , new WasmEventParameter(Uint128.class)));
    ;

    protected Bank(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    protected Bank(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> DivsAddon() {
        final WasmFunction function = new WasmFunction(FUNC_DIVSADDON, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> DivsAddon(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_DIVSADDON, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public List<OnTokenSellEventResponse> getOnTokenSellEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(ONTOKENSELL_EVENT, transactionReceipt);
        ArrayList<OnTokenSellEventResponse> responses = new ArrayList<OnTokenSellEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            OnTokenSellEventResponse typedResponse = new OnTokenSellEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (Uint128) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (Uint128) eventValues.getNonIndexedValues().get(2);
            typedResponse.arg4 = (Uint128) eventValues.getNonIndexedValues().get(3);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<OnTokenSellEventResponse> onTokenSellEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, OnTokenSellEventResponse>() {
            @Override
            public OnTokenSellEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(ONTOKENSELL_EVENT, log);
                OnTokenSellEventResponse typedResponse = new OnTokenSellEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (Uint128) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (Uint128) eventValues.getNonIndexedValues().get(2);
                typedResponse.arg4 = (Uint128) eventValues.getNonIndexedValues().get(3);
                return typedResponse;
            }
        });
    }

    public Observable<OnTokenSellEventResponse> onTokenSellEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(ONTOKENSELL_EVENT));
        return onTokenSellEventObservable(filter);
    }

    public List<OnReinvestmentEventResponse> getOnReinvestmentEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(ONREINVESTMENT_EVENT, transactionReceipt);
        ArrayList<OnReinvestmentEventResponse> responses = new ArrayList<OnReinvestmentEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            OnReinvestmentEventResponse typedResponse = new OnReinvestmentEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (Uint128) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<OnReinvestmentEventResponse> onReinvestmentEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, OnReinvestmentEventResponse>() {
            @Override
            public OnReinvestmentEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(ONREINVESTMENT_EVENT, log);
                OnReinvestmentEventResponse typedResponse = new OnReinvestmentEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (Uint128) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Observable<OnReinvestmentEventResponse> onReinvestmentEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(ONREINVESTMENT_EVENT));
        return onReinvestmentEventObservable(filter);
    }

    public List<OnWithdrawEventResponse> getOnWithdrawEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(ONWITHDRAW_EVENT, transactionReceipt);
        ArrayList<OnWithdrawEventResponse> responses = new ArrayList<OnWithdrawEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            OnWithdrawEventResponse typedResponse = new OnWithdrawEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<OnWithdrawEventResponse> onWithdrawEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, OnWithdrawEventResponse>() {
            @Override
            public OnWithdrawEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(ONWITHDRAW_EVENT, log);
                OnWithdrawEventResponse typedResponse = new OnWithdrawEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<OnWithdrawEventResponse> onWithdrawEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(ONWITHDRAW_EVENT));
        return onWithdrawEventObservable(filter);
    }

    public List<TransferEventResponse> getTransferEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER_EVENT, transactionReceipt);
        ArrayList<TransferEventResponse> responses = new ArrayList<TransferEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            TransferEventResponse typedResponse = new TransferEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (Uint128) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<TransferEventResponse> transferEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, TransferEventResponse>() {
            @Override
            public TransferEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER_EVENT, log);
                TransferEventResponse typedResponse = new TransferEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (Uint128) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Observable<TransferEventResponse> transferEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TRANSFER_EVENT));
        return transferEventObservable(filter);
    }

    public List<TestDataEventResponse> getTestDataEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TESTDATA_EVENT, transactionReceipt);
        ArrayList<TestDataEventResponse> responses = new ArrayList<TestDataEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            TestDataEventResponse typedResponse = new TestDataEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (Uint128) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (Uint128) eventValues.getNonIndexedValues().get(2);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<TestDataEventResponse> testDataEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, TestDataEventResponse>() {
            @Override
            public TestDataEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TESTDATA_EVENT, log);
                TestDataEventResponse typedResponse = new TestDataEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (Uint128) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (Uint128) eventValues.getNonIndexedValues().get(2);
                return typedResponse;
            }
        });
    }

    public Observable<TestDataEventResponse> testDataEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TESTDATA_EVENT));
        return testDataEventObservable(filter);
    }

    public static RemoteCall<Bank> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(Bank.class, web3j, credentials, contractGasProvider, encodedConstructor);
    }

    public static RemoteCall<Bank> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(Bank.class, web3j, transactionManager, contractGasProvider, encodedConstructor);
    }

    public static RemoteCall<Bank> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, BigInteger initialVonValue) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(Bank.class, web3j, credentials, contractGasProvider, encodedConstructor, initialVonValue);
    }

    public static RemoteCall<Bank> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, BigInteger initialVonValue) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(Bank.class, web3j, transactionManager, contractGasProvider, encodedConstructor, initialVonValue);
    }

    public List<OnTokenPurchaseEventResponse> getOnTokenPurchaseEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(ONTOKENPURCHASE_EVENT, transactionReceipt);
        ArrayList<OnTokenPurchaseEventResponse> responses = new ArrayList<OnTokenPurchaseEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            OnTokenPurchaseEventResponse typedResponse = new OnTokenPurchaseEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (Uint128) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (WasmAddress) eventValues.getNonIndexedValues().get(2);
            typedResponse.arg4 = (Uint128) eventValues.getNonIndexedValues().get(3);
            typedResponse.arg5 = (Uint128) eventValues.getNonIndexedValues().get(4);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<OnTokenPurchaseEventResponse> onTokenPurchaseEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, OnTokenPurchaseEventResponse>() {
            @Override
            public OnTokenPurchaseEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(ONTOKENPURCHASE_EVENT, log);
                OnTokenPurchaseEventResponse typedResponse = new OnTokenPurchaseEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (Uint128) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (WasmAddress) eventValues.getNonIndexedValues().get(2);
                typedResponse.arg4 = (Uint128) eventValues.getNonIndexedValues().get(3);
                typedResponse.arg5 = (Uint128) eventValues.getNonIndexedValues().get(4);
                return typedResponse;
            }
        });
    }

    public Observable<OnTokenPurchaseEventResponse> onTokenPurchaseEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(ONTOKENPURCHASE_EVENT));
        return onTokenPurchaseEventObservable(filter);
    }

    public RemoteCall<TransactionReceipt> reinvest() {
        final WasmFunction function = new WasmFunction(FUNC_REINVEST, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> reinvest(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_REINVEST, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> buy(WasmAddress _referredBy) {
        final WasmFunction function = new WasmFunction(FUNC_BUY, Arrays.asList(_referredBy), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> buy(WasmAddress _referredBy, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_BUY, Arrays.asList(_referredBy), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> IDD() {
        final WasmFunction function = new WasmFunction(FUNC_IDD, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> IDD(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_IDD, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<Uint128> calculateEthereumReceived(Uint128 _tokensToSell) {
        final WasmFunction function = new WasmFunction(FUNC_CALCULATEETHEREUMRECEIVED, Arrays.asList(_tokensToSell), Uint128.class);
        return executeRemoteCall(function, Uint128.class);
    }

    public RemoteCall<Uint8> exitFee() {
        final WasmFunction function = new WasmFunction(FUNC_EXITFEE, Arrays.asList(), Uint8.class);
        return executeRemoteCall(function, Uint8.class);
    }

    public RemoteCall<TransactionReceipt> exit() {
        final WasmFunction function = new WasmFunction(FUNC_EXIT, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> exit(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_EXIT, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> withdraw() {
        final WasmFunction function = new WasmFunction(FUNC_WITHDRAW, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> withdraw(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_WITHDRAW, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> sell(Uint128 _amountOfTokens) {
        final WasmFunction function = new WasmFunction(FUNC_SELL, Arrays.asList(_amountOfTokens), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> sell(Uint128 _amountOfTokens, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_SELL, Arrays.asList(_amountOfTokens), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> transfer(WasmAddress _toAddress, Uint128 _amountOfTokens) {
        final WasmFunction function = new WasmFunction(FUNC_TRANSFER, Arrays.asList(_toAddress,_amountOfTokens), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> transfer(WasmAddress _toAddress, Uint128 _amountOfTokens, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_TRANSFER, Arrays.asList(_toAddress,_amountOfTokens), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<Uint128> totalEthereumBalance() {
        final WasmFunction function = new WasmFunction(FUNC_TOTALETHEREUMBALANCE, Arrays.asList(), Uint128.class);
        return executeRemoteCall(function, Uint128.class);
    }

    public RemoteCall<Uint128> totalSupply() {
        final WasmFunction function = new WasmFunction(FUNC_TOTALSUPPLY, Arrays.asList(), Uint128.class);
        return executeRemoteCall(function, Uint128.class);
    }

    public RemoteCall<Uint128> myTokens() {
        final WasmFunction function = new WasmFunction(FUNC_MYTOKENS, Arrays.asList(), Uint128.class);
        return executeRemoteCall(function, Uint128.class);
    }

    public RemoteCall<Uint128> myDividends(Boolean _includeReferralBonus) {
        final WasmFunction function = new WasmFunction(FUNC_MYDIVIDENDS, Arrays.asList(_includeReferralBonus), Uint128.class);
        return executeRemoteCall(function, Uint128.class);
    }

    public RemoteCall<Uint128> balanceOf(WasmAddress _customerAddress) {
        final WasmFunction function = new WasmFunction(FUNC_BALANCEOF, Arrays.asList(_customerAddress), Uint128.class);
        return executeRemoteCall(function, Uint128.class);
    }

    public RemoteCall<Uint128> dividendsOf(WasmAddress _customerAddress) {
        final WasmFunction function = new WasmFunction(FUNC_DIVIDENDSOF, Arrays.asList(_customerAddress), Uint128.class);
        return executeRemoteCall(function, Uint128.class);
    }

    public RemoteCall<Uint128> sellPrice() {
        final WasmFunction function = new WasmFunction(FUNC_SELLPRICE, Arrays.asList(), Uint128.class);
        return executeRemoteCall(function, Uint128.class);
    }

    public RemoteCall<Uint128> buyPrice() {
        final WasmFunction function = new WasmFunction(FUNC_BUYPRICE, Arrays.asList(), Uint128.class);
        return executeRemoteCall(function, Uint128.class);
    }

    public RemoteCall<Uint128> calculateTokensReceived(Uint128 _ethereumToSpend) {
        final WasmFunction function = new WasmFunction(FUNC_CALCULATETOKENSRECEIVED, Arrays.asList(_ethereumToSpend), Uint128.class);
        return executeRemoteCall(function, Uint128.class);
    }

    public static Bank load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        return new Bank(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Bank load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        return new Bank(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static class OnTokenSellEventResponse {
        public Log log;

        public String topic;

        public Uint128 arg1;

        public Uint128 arg2;

        public Uint128 arg3;

        public Uint128 arg4;
    }

    public static class OnReinvestmentEventResponse {
        public Log log;

        public String topic;

        public Uint128 arg1;

        public Uint128 arg2;
    }

    public static class OnWithdrawEventResponse {
        public Log log;

        public String topic;

        public Uint128 arg1;
    }

    public static class TransferEventResponse {
        public Log log;

        public String topic;

        public WasmAddress arg1;

        public Uint128 arg2;
    }

    public static class TestDataEventResponse {
        public Log log;

        public String topic;

        public Uint128 arg1;

        public Uint128 arg2;

        public Uint128 arg3;
    }

    public static class OnTokenPurchaseEventResponse {
        public Log log;

        public String topic;

        public Uint128 arg1;

        public Uint128 arg2;

        public WasmAddress arg3;

        public Uint128 arg4;

        public Uint128 arg5;
    }
}
