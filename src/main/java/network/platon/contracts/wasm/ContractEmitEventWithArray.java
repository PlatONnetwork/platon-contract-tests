package network.platon.contracts.wasm;

import com.platon.abi.wasm.WasmEventEncoder;
import com.platon.abi.wasm.WasmFunctionEncoder;
import com.platon.abi.wasm.datatypes.WasmEvent;
import com.platon.abi.wasm.datatypes.WasmEventParameter;
import com.platon.abi.wasm.datatypes.WasmFunction;
import com.platon.crypto.Credentials;
import com.platon.protocol.Web3j;
import com.platon.protocol.core.DefaultBlockParameter;
import com.platon.protocol.core.RemoteCall;
import com.platon.protocol.core.methods.request.PlatonFilter;
import com.platon.protocol.core.methods.response.Log;
import com.platon.protocol.core.methods.response.TransactionReceipt;
import com.platon.rlp.wasm.datatypes.Int8;
import com.platon.rlp.wasm.datatypes.Uint8;
import com.platon.tx.TransactionManager;
import com.platon.tx.WasmContract;
import com.platon.tx.gas.GasProvider;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import rx.Observable;
import rx.functions.Func1;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://github.com/PlatONnetwork/client-sdk-java/releases">platon-web3j command line tools</a>,
 * or the com.platon.codegen.WasmFunctionWrapperGenerator in the 
 * <a href="https://github.com/PlatONnetwork/client-sdk-java/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with platon-web3j version 0.15.1.7.
 */
public class ContractEmitEventWithArray extends WasmContract {
    private static String BINARY_0 = "";

    public static String BINARY = BINARY_0;

    public static final String FUNC_ZEROTOPIC_EIGTHARGS_EVENT = "zerotopic_eigthargs_event";

    public static final String FUNC_ONETOPIC_SEVENARGS_EVENT = "onetopic_sevenargs_event";

    public static final String FUNC_TWOTOPIC_SIXARGS_EVENT = "twotopic_sixargs_event";

    public static final String FUNC_THREETOPIC_FIVEARGS_EVENT = "threetopic_fiveargs_event";

    public static final String FUNC_SET_STRING = "set_string";

    public static final String FUNC_GET_STRING = "get_string";

    public static final WasmEvent TRANSFER0_EVENT = new WasmEvent("transfer0", Arrays.asList(), Arrays.asList(new WasmEventParameter(Int8[].class) , new WasmEventParameter(byte[].class) , new WasmEventParameter(byte[].class) , new WasmEventParameter(Int8[].class) , new WasmEventParameter(Uint8[].class) , new WasmEventParameter(List.class, 
            new com.platon.rlp.wasm.ParameterizedTypeImpl(
            new java.lang.reflect.Type[] {com.platon.rlp.wasm.datatypes.Uint8.class}, 
            java.util.List.class, 
            java.util.List.class)) , new WasmEventParameter(List.class, 
            new com.platon.rlp.wasm.ParameterizedTypeImpl(
            new java.lang.reflect.Type[] {com.platon.rlp.wasm.datatypes.Int8.class}, 
            java.util.List.class, 
            java.util.List.class)) , new WasmEventParameter(String.class)));
    ;

    public static final WasmEvent TRANSFER1_EVENT = new WasmEvent("transfer1", Arrays.asList(new WasmEventParameter(List.class, 
            new com.platon.rlp.wasm.ParameterizedTypeImpl(
            new java.lang.reflect.Type[] {com.platon.rlp.wasm.datatypes.Int8.class}, 
            java.util.List.class, 
            java.util.List.class), true)), Arrays.asList(new WasmEventParameter(Int8[].class) , new WasmEventParameter(byte[].class) , new WasmEventParameter(byte[].class) , new WasmEventParameter(Int8[].class) , new WasmEventParameter(Uint8[].class) , new WasmEventParameter(List.class, 
            new com.platon.rlp.wasm.ParameterizedTypeImpl(
            new java.lang.reflect.Type[] {com.platon.rlp.wasm.datatypes.Uint8.class}, 
            java.util.List.class, 
            java.util.List.class)) , new WasmEventParameter(String.class)));
    ;

    public static final WasmEvent TRANSFER2_EVENT = new WasmEvent("transfer2", Arrays.asList(new WasmEventParameter(Int8[].class, true) , new WasmEventParameter(byte[].class, true)), Arrays.asList(new WasmEventParameter(byte[].class) , new WasmEventParameter(Int8[].class) , new WasmEventParameter(Uint8[].class) , new WasmEventParameter(List.class, 
            new com.platon.rlp.wasm.ParameterizedTypeImpl(
            new java.lang.reflect.Type[] {com.platon.rlp.wasm.datatypes.Int8.class}, 
            java.util.List.class, 
            java.util.List.class)) , new WasmEventParameter(List.class, 
            new com.platon.rlp.wasm.ParameterizedTypeImpl(
            new java.lang.reflect.Type[] {com.platon.rlp.wasm.datatypes.Uint8.class}, 
            java.util.List.class, 
            java.util.List.class)) , new WasmEventParameter(String.class)));
    ;

    public static final WasmEvent TRANSFER3_EVENT = new WasmEvent("transfer3", Arrays.asList(new WasmEventParameter(byte[].class, true) , new WasmEventParameter(Int8[].class, true) , new WasmEventParameter(Uint8[].class, true)), Arrays.asList(new WasmEventParameter(Int8[].class) , new WasmEventParameter(byte[].class) , new WasmEventParameter(List.class, 
            new com.platon.rlp.wasm.ParameterizedTypeImpl(
            new java.lang.reflect.Type[] {com.platon.rlp.wasm.datatypes.Int8.class}, 
            java.util.List.class, 
            java.util.List.class)) , new WasmEventParameter(List.class, 
            new com.platon.rlp.wasm.ParameterizedTypeImpl(
            new java.lang.reflect.Type[] {java.lang.String.class}, 
            java.util.List.class, 
            java.util.List.class)) , new WasmEventParameter(String.class)));
    ;

    protected ContractEmitEventWithArray(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    protected ContractEmitEventWithArray(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> zerotopic_eigthargs_event(Int8[] _argsOne, byte[] _argsTwo, byte[] _argsThree, Int8[] _argsFour, Uint8[] _argsFive, List<Uint8> _argsSix, List<Int8> _argsSeven, String _argsEight) {
        final WasmFunction function = new WasmFunction(FUNC_ZEROTOPIC_EIGTHARGS_EVENT, Arrays.asList(_argsOne,_argsTwo,_argsThree,_argsFour,_argsFive,_argsSix,_argsSeven,_argsEight), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> zerotopic_eigthargs_event(Int8[] _argsOne, byte[] _argsTwo, byte[] _argsThree, Int8[] _argsFour, Uint8[] _argsFive, List<Uint8> _argsSix, List<Int8> _argsSeven, String _argsEight, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_ZEROTOPIC_EIGTHARGS_EVENT, Arrays.asList(_argsOne,_argsTwo,_argsThree,_argsFour,_argsFive,_argsSix,_argsSeven,_argsEight), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public List<Transfer0EventResponse> getTransfer0Events(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER0_EVENT, transactionReceipt);
        ArrayList<Transfer0EventResponse> responses = new ArrayList<Transfer0EventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            Transfer0EventResponse typedResponse = new Transfer0EventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (Int8[]) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (byte[]) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (byte[]) eventValues.getNonIndexedValues().get(2);
            typedResponse.arg4 = (Int8[]) eventValues.getNonIndexedValues().get(3);
            typedResponse.arg5 = (Uint8[]) eventValues.getNonIndexedValues().get(4);
            typedResponse.arg6 = (List<Uint8>) eventValues.getNonIndexedValues().get(5);
            typedResponse.arg7 = (List<Int8>) eventValues.getNonIndexedValues().get(6);
            typedResponse.arg8 = (String) eventValues.getNonIndexedValues().get(7);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<Transfer0EventResponse> transfer0EventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, Transfer0EventResponse>() {
            @Override
            public Transfer0EventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER0_EVENT, log);
                Transfer0EventResponse typedResponse = new Transfer0EventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (Int8[]) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (byte[]) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (byte[]) eventValues.getNonIndexedValues().get(2);
                typedResponse.arg4 = (Int8[]) eventValues.getNonIndexedValues().get(3);
                typedResponse.arg5 = (Uint8[]) eventValues.getNonIndexedValues().get(4);
                typedResponse.arg6 = (List<Uint8>) eventValues.getNonIndexedValues().get(5);
                typedResponse.arg7 = (List<Int8>) eventValues.getNonIndexedValues().get(6);
                typedResponse.arg8 = (String) eventValues.getNonIndexedValues().get(7);
                return typedResponse;
            }
        });
    }

    public Observable<Transfer0EventResponse> transfer0EventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TRANSFER0_EVENT));
        return transfer0EventObservable(filter);
    }

    public List<Transfer1EventResponse> getTransfer1Events(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER1_EVENT, transactionReceipt);
        ArrayList<Transfer1EventResponse> responses = new ArrayList<Transfer1EventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            Transfer1EventResponse typedResponse = new Transfer1EventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (Int8[]) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (byte[]) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (byte[]) eventValues.getNonIndexedValues().get(2);
            typedResponse.arg4 = (Int8[]) eventValues.getNonIndexedValues().get(3);
            typedResponse.arg5 = (Uint8[]) eventValues.getNonIndexedValues().get(4);
            typedResponse.arg6 = (List<Uint8>) eventValues.getNonIndexedValues().get(5);
            typedResponse.arg7 = (String) eventValues.getNonIndexedValues().get(6);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<Transfer1EventResponse> transfer1EventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, Transfer1EventResponse>() {
            @Override
            public Transfer1EventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER1_EVENT, log);
                Transfer1EventResponse typedResponse = new Transfer1EventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (Int8[]) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (byte[]) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (byte[]) eventValues.getNonIndexedValues().get(2);
                typedResponse.arg4 = (Int8[]) eventValues.getNonIndexedValues().get(3);
                typedResponse.arg5 = (Uint8[]) eventValues.getNonIndexedValues().get(4);
                typedResponse.arg6 = (List<Uint8>) eventValues.getNonIndexedValues().get(5);
                typedResponse.arg7 = (String) eventValues.getNonIndexedValues().get(6);
                return typedResponse;
            }
        });
    }

    public Observable<Transfer1EventResponse> transfer1EventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TRANSFER1_EVENT));
        return transfer1EventObservable(filter);
    }

    public List<Transfer2EventResponse> getTransfer2Events(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER2_EVENT, transactionReceipt);
        ArrayList<Transfer2EventResponse> responses = new ArrayList<Transfer2EventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            Transfer2EventResponse typedResponse = new Transfer2EventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (Int8[]) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (Uint8[]) eventValues.getNonIndexedValues().get(2);
            typedResponse.arg4 = (List<Int8>) eventValues.getNonIndexedValues().get(3);
            typedResponse.arg5 = (List<Uint8>) eventValues.getNonIndexedValues().get(4);
            typedResponse.arg6 = (String) eventValues.getNonIndexedValues().get(5);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<Transfer2EventResponse> transfer2EventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, Transfer2EventResponse>() {
            @Override
            public Transfer2EventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER2_EVENT, log);
                Transfer2EventResponse typedResponse = new Transfer2EventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (Int8[]) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (Uint8[]) eventValues.getNonIndexedValues().get(2);
                typedResponse.arg4 = (List<Int8>) eventValues.getNonIndexedValues().get(3);
                typedResponse.arg5 = (List<Uint8>) eventValues.getNonIndexedValues().get(4);
                typedResponse.arg6 = (String) eventValues.getNonIndexedValues().get(5);
                return typedResponse;
            }
        });
    }

    public Observable<Transfer2EventResponse> transfer2EventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TRANSFER2_EVENT));
        return transfer2EventObservable(filter);
    }

    public List<Transfer3EventResponse> getTransfer3Events(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER3_EVENT, transactionReceipt);
        ArrayList<Transfer3EventResponse> responses = new ArrayList<Transfer3EventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            Transfer3EventResponse typedResponse = new Transfer3EventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.topic3 = (String) eventValues.getIndexedValues().get(2);
            typedResponse.arg1 = (Int8[]) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (byte[]) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (List<Int8>) eventValues.getNonIndexedValues().get(2);
            typedResponse.arg4 = (List<String>) eventValues.getNonIndexedValues().get(3);
            typedResponse.arg5 = (String) eventValues.getNonIndexedValues().get(4);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<Transfer3EventResponse> transfer3EventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, Transfer3EventResponse>() {
            @Override
            public Transfer3EventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER3_EVENT, log);
                Transfer3EventResponse typedResponse = new Transfer3EventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.topic3 = (String) eventValues.getIndexedValues().get(2);
                typedResponse.arg1 = (Int8[]) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (byte[]) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (List<Int8>) eventValues.getNonIndexedValues().get(2);
                typedResponse.arg4 = (List<String>) eventValues.getNonIndexedValues().get(3);
                typedResponse.arg5 = (String) eventValues.getNonIndexedValues().get(4);
                return typedResponse;
            }
        });
    }

    public Observable<Transfer3EventResponse> transfer3EventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TRANSFER3_EVENT));
        return transfer3EventObservable(filter);
    }

    public static RemoteCall<ContractEmitEventWithArray> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(ContractEmitEventWithArray.class, web3j, credentials, contractGasProvider, encodedConstructor);
    }

    public static RemoteCall<ContractEmitEventWithArray> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(ContractEmitEventWithArray.class, web3j, transactionManager, contractGasProvider, encodedConstructor);
    }

    public static RemoteCall<ContractEmitEventWithArray> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, BigInteger initialVonValue) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(ContractEmitEventWithArray.class, web3j, credentials, contractGasProvider, encodedConstructor, initialVonValue);
    }

    public static RemoteCall<ContractEmitEventWithArray> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, BigInteger initialVonValue) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(ContractEmitEventWithArray.class, web3j, transactionManager, contractGasProvider, encodedConstructor, initialVonValue);
    }

    public RemoteCall<TransactionReceipt> onetopic_sevenargs_event(List<Int8> _topicOne, Int8[] _argsOne, byte[] _argsTwo, byte[] _argsThree, Int8[] _argsFour, Uint8[] _argsFive, List<Uint8> _argsSix, String _argsSeven) {
        final WasmFunction function = new WasmFunction(FUNC_ONETOPIC_SEVENARGS_EVENT, Arrays.asList(_topicOne,_argsOne,_argsTwo,_argsThree,_argsFour,_argsFive,_argsSix,_argsSeven), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> onetopic_sevenargs_event(List<Int8> _topicOne, Int8[] _argsOne, byte[] _argsTwo, byte[] _argsThree, Int8[] _argsFour, Uint8[] _argsFive, List<Uint8> _argsSix, String _argsSeven, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_ONETOPIC_SEVENARGS_EVENT, Arrays.asList(_topicOne,_argsOne,_argsTwo,_argsThree,_argsFour,_argsFive,_argsSix,_argsSeven), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> twotopic_sixargs_event(Int8[] _topicOne, byte[] _topicTwo, byte[] _argsOne, Int8[] _argsTwo, Uint8[] _argsThree, List<Int8> _argsFour, List<Uint8> _argsFive, String _argsSix) {
        final WasmFunction function = new WasmFunction(FUNC_TWOTOPIC_SIXARGS_EVENT, Arrays.asList(_topicOne,_topicTwo,_argsOne,_argsTwo,_argsThree,_argsFour,_argsFive,_argsSix), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> twotopic_sixargs_event(Int8[] _topicOne, byte[] _topicTwo, byte[] _argsOne, Int8[] _argsTwo, Uint8[] _argsThree, List<Int8> _argsFour, List<Uint8> _argsFive, String _argsSix, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_TWOTOPIC_SIXARGS_EVENT, Arrays.asList(_topicOne,_topicTwo,_argsOne,_argsTwo,_argsThree,_argsFour,_argsFive,_argsSix), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> threetopic_fiveargs_event(byte[] _topicOne, Int8[] _topicTwo, Uint8[] _topicThree, Int8[] _argsOne, byte[] _argsTwo, List<Int8> _argsThree, List<String> _argsFour, String _argsFive) {
        final WasmFunction function = new WasmFunction(FUNC_THREETOPIC_FIVEARGS_EVENT, Arrays.asList(_topicOne,_topicTwo,_topicThree,_argsOne,_argsTwo,_argsThree,_argsFour,_argsFive), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> threetopic_fiveargs_event(byte[] _topicOne, Int8[] _topicTwo, Uint8[] _topicThree, Int8[] _argsOne, byte[] _argsTwo, List<Int8> _argsThree, List<String> _argsFour, String _argsFive, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_THREETOPIC_FIVEARGS_EVENT, Arrays.asList(_topicOne,_topicTwo,_topicThree,_argsOne,_argsTwo,_argsThree,_argsFour,_argsFive), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> set_string(String _stringargs) {
        final WasmFunction function = new WasmFunction(FUNC_SET_STRING, Arrays.asList(_stringargs), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> set_string(String _stringargs, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_SET_STRING, Arrays.asList(_stringargs), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<String> get_string() {
        final WasmFunction function = new WasmFunction(FUNC_GET_STRING, Arrays.asList(), String.class);
        return executeRemoteCall(function, String.class);
    }

    public static ContractEmitEventWithArray load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        return new ContractEmitEventWithArray(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static ContractEmitEventWithArray load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        return new ContractEmitEventWithArray(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static class Transfer0EventResponse {
        public Log log;

        public Int8[] arg1;

        public byte[] arg2;

        public byte[] arg3;

        public Int8[] arg4;

        public Uint8[] arg5;

        public List<Uint8> arg6;

        public List<Int8> arg7;

        public String arg8;
    }

    public static class Transfer1EventResponse {
        public Log log;

        public String topic;

        public Int8[] arg1;

        public byte[] arg2;

        public byte[] arg3;

        public Int8[] arg4;

        public Uint8[] arg5;

        public List<Uint8> arg6;

        public String arg7;
    }

    public static class Transfer2EventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public byte[] arg1;

        public Int8[] arg2;

        public Uint8[] arg3;

        public List<Int8> arg4;

        public List<Uint8> arg5;

        public String arg6;
    }

    public static class Transfer3EventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public String topic3;

        public Int8[] arg1;

        public byte[] arg2;

        public List<Int8> arg3;

        public List<String> arg4;

        public String arg5;
    }
}
