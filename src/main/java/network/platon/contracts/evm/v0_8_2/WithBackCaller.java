package network.platon.contracts.evm.v0_8_2;

import com.platon.abi.solidity.TypeReference;
import com.platon.abi.solidity.datatypes.Function;
import com.platon.abi.solidity.datatypes.Type;
import com.platon.abi.solidity.datatypes.Utf8String;
import com.platon.abi.solidity.datatypes.generated.Uint256;
import com.platon.crypto.Credentials;
import com.platon.protocol.Web3j;
import com.platon.protocol.core.RemoteCall;
import com.platon.protocol.core.methods.response.TransactionReceipt;
import com.platon.tx.Contract;
import com.platon.tx.TransactionManager;
import com.platon.tx.gas.GasProvider;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://github.com/PlatONnetwork/client-sdk-java/releases">platon-web3j command line tools</a>,
 * or the com.platon.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/PlatONnetwork/client-sdk-java/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 0.15.1.7.
 */
public class WithBackCaller extends Contract {
    private static final String BINARY = "608060405234801561001057600080fd5b50610dff806100206000396000f3fe608060405234801561001057600080fd5b50600436106100615760003560e01c80621e257c146100665780630687590a1461008257806308c2938b1461009e578063400f6a60146100bc57806356ea18ab146100d8578063de583cfa146100f4575b600080fd5b610080600480360381019061007b91906107f2565b610112565b005b61009c6004803603810190610097919061081b565b610210565b005b6100a6610346565b6040516100b39190610a99565b60405180910390f35b6100d660048036038101906100d191906108d6565b6103d8565b005b6100f260048036038101906100ed919061086f565b6104fe565b005b6100fc610637565b6040516101099190610b25565b60405180910390f35b8073ffffffffffffffffffffffffffffffffffffffff166055603c60405160240161013e929190610a70565b6040516020818303038152906040527f771602f7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516101c89190610a59565b6000604051808303816000865af19150503d8060008114610205576040519150601f19603f3d011682016040523d82523d6000602084013e61020a565b606091505b50505050565b6000808373ffffffffffffffffffffffffffffffffffffffff168360405160240161023b9190610abb565b6040516020818303038152906040527fae49cd9c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102c59190610a59565b6000604051808303816000865af19150503d8060008114610302576040519150601f19603f3d011682016040523d82523d6000602084013e610307565b606091505b50915091508161031657600080fd5b8080602001905181019061032a9190610912565b6001908051906020019061033f929190610640565b5050505050565b60606001805461035590610c77565b80601f016020809104026020016040519081016040528092919081815260200182805461038190610c77565b80156103ce5780601f106103a3576101008083540402835291602001916103ce565b820191906000526020600020905b8154815290600101906020018083116103b157829003601f168201915b5050505050905090565b6000808373ffffffffffffffffffffffffffffffffffffffff16836040516024016104039190610b25565b6040516020818303038152906040527f68875570000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161048d9190610a59565b6000604051808303816000865af19150503d80600081146104ca576040519150601f19603f3d011682016040523d82523d6000602084013e6104cf565b606091505b5091509150816104de57600080fd5b808060200190518101906104f29190610953565b60008190555050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff16838560405160240161052a9190610af0565b6040516020818303038152906040527fae49cd9c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105b49190610a59565b60006040518083038160008787f1925050503d80600081146105f2576040519150601f19603f3d011682016040523d82523d6000602084013e6105f7565b606091505b50915091508161060657600080fd5b8080602001905181019061061a9190610912565b6001908051906020019061062f929190610640565b505050505050565b60008054905090565b82805461064c90610c77565b90600052602060002090601f01602090048101928261066e57600085556106b5565b82601f1061068757805160ff19168380011785556106b5565b828001600101855582156106b5579182015b828111156106b4578251825591602001919060010190610699565b5b5090506106c291906106c6565b5090565b5b808211156106df5760008160009055506001016106c7565b5090565b60006106f66106f184610b65565b610b40565b90508281526020810184848401111561070e57600080fd5b610719848285610c35565b509392505050565b600061073461072f84610b65565b610b40565b90508281526020810184848401111561074c57600080fd5b610757848285610c44565b509392505050565b60008135905061076e81610d9b565b92915050565b600082601f83011261078557600080fd5b81356107958482602086016106e3565b91505092915050565b600082601f8301126107af57600080fd5b81516107bf848260208601610721565b91505092915050565b6000813590506107d781610db2565b92915050565b6000815190506107ec81610db2565b92915050565b60006020828403121561080457600080fd5b60006108128482850161075f565b91505092915050565b6000806040838503121561082e57600080fd5b600061083c8582860161075f565b925050602083013567ffffffffffffffff81111561085957600080fd5b61086585828601610774565b9150509250929050565b60008060006060848603121561088457600080fd5b60006108928682870161075f565b935050602084013567ffffffffffffffff8111156108af57600080fd5b6108bb86828701610774565b92505060406108cc868287016107c8565b9150509250925092565b600080604083850312156108e957600080fd5b60006108f78582860161075f565b9250506020610908858286016107c8565b9150509250929050565b60006020828403121561092457600080fd5b600082015167ffffffffffffffff81111561093e57600080fd5b61094a8482850161079e565b91505092915050565b60006020828403121561096557600080fd5b6000610973848285016107dd565b91505092915050565b600061098782610b96565b6109918185610bac565b93506109a1818560208601610c44565b80840191505092915050565b6109b681610c11565b82525050565b6109c581610c23565b82525050565b60006109d682610ba1565b6109e08185610bb7565b93506109f0818560208601610c44565b6109f981610d38565b840191505092915050565b6000610a11600583610bb7565b9150610a1c82610d49565b602082019050919050565b6000610a34600883610bb7565b9150610a3f82610d72565b602082019050919050565b610a5381610bfa565b82525050565b6000610a65828461097c565b915081905092915050565b6000604082019050610a8560008301856109bc565b610a9260208301846109ad565b9392505050565b60006020820190508181036000830152610ab381846109cb565b905092915050565b60006040820190508181036000830152610ad481610a04565b90508181036020830152610ae881846109cb565b905092915050565b60006040820190508181036000830152610b0981610a27565b90508181036020830152610b1d81846109cb565b905092915050565b6000602082019050610b3a6000830184610a4a565b92915050565b6000610b4a610b5b565b9050610b568282610ca9565b919050565b6000604051905090565b600067ffffffffffffffff821115610b8057610b7f610d09565b5b610b8982610d38565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610bd382610bda565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000610c1c82610c04565b9050919050565b6000610c2e82610c04565b9050919050565b82818337600083830152505050565b60005b83811015610c62578082015181840152602081019050610c47565b83811115610c71576000848401525b50505050565b60006002820490506001821680610c8f57607f821691505b60208210811415610ca357610ca2610cda565b5b50919050565b610cb282610d38565b810181811067ffffffffffffffff82111715610cd157610cd0610d09565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f68656c6c6f000000000000000000000000000000000000000000000000000000600082015250565b7f68656c6c6f676173000000000000000000000000000000000000000000000000600082015250565b610da481610bc8565b8114610daf57600080fd5b50565b610dbb81610bfa565b8114610dc657600080fd5b5056fea264697066735822122025181094c3d3d7261820c934a763fbce53aab20d5608a4e73318b42c39c27b5464736f6c63430008020033";

    public static final String FUNC_CALLADDLTEST = "callAddlTest";

    public static final String FUNC_CALLDOUBLELTEST = "callDoublelTest";

    public static final String FUNC_CALLGETNAMETEST = "callgetNameTest";

    public static final String FUNC_CALLGETNAMETESTWITHGAS = "callgetNameTestWithGas";

    public static final String FUNC_GETSTRINGRESULT = "getStringResult";

    public static final String FUNC_GETUINTRESULT = "getuintResult";

    protected WithBackCaller(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    protected WithBackCaller(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> callAddlTest(String other) {
        final Function function = new Function(
                FUNC_CALLADDLTEST, 
                Arrays.<Type>asList(new com.platon.abi.solidity.datatypes.Address(other)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> callDoublelTest(String other, BigInteger a) {
        final Function function = new Function(
                FUNC_CALLDOUBLELTEST, 
                Arrays.<Type>asList(new com.platon.abi.solidity.datatypes.Address(other), 
                new com.platon.abi.solidity.datatypes.generated.Uint256(a)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> callgetNameTest(String other, String name) {
        final Function function = new Function(
                FUNC_CALLGETNAMETEST, 
                Arrays.<Type>asList(new com.platon.abi.solidity.datatypes.Address(other), 
                new com.platon.abi.solidity.datatypes.Utf8String(name)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> callgetNameTestWithGas(String other, String name, BigInteger gasValue) {
        final Function function = new Function(
                FUNC_CALLGETNAMETESTWITHGAS, 
                Arrays.<Type>asList(new com.platon.abi.solidity.datatypes.Address(other), 
                new com.platon.abi.solidity.datatypes.Utf8String(name), 
                new com.platon.abi.solidity.datatypes.generated.Uint256(gasValue)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getStringResult() {
        final Function function = new Function(FUNC_GETSTRINGRESULT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> getuintResult() {
        final Function function = new Function(FUNC_GETUINTRESULT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public static RemoteCall<WithBackCaller> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        return deployRemoteCall(WithBackCaller.class, web3j, credentials, contractGasProvider, BINARY,  "");
    }

    public static RemoteCall<WithBackCaller> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        return deployRemoteCall(WithBackCaller.class, web3j, transactionManager, contractGasProvider, BINARY,  "");
    }

    public static WithBackCaller load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        return new WithBackCaller(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static WithBackCaller load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        return new WithBackCaller(contractAddress, web3j, transactionManager, contractGasProvider);
    }
}
